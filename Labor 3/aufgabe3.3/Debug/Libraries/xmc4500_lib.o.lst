   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4500_lib.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.send_byte,"ax",%progbits
  20              	 .align 2
  21              	 .global send_byte
  22              	 .thumb
  23              	 .thumb_func
  25              	send_byte:
  26              	.LFB133:
  27              	 .file 1 "../Libraries/xmc4500_lib.c"
   1:../Libraries/xmc4500_lib.c **** #include <XMC4500.h>		//SFR declarations of the selected device
   2:../Libraries/xmc4500_lib.c **** 
   3:../Libraries/xmc4500_lib.c **** // ******************************************************************
   4:../Libraries/xmc4500_lib.c **** // LCD-Funktionen fuer XMC4500 Trainingsboard
   5:../Libraries/xmc4500_lib.c **** // R. Birk April 14
   6:../Libraries/xmc4500_lib.c **** // A. Schilling 10/16 (Datentypen)
   7:../Libraries/xmc4500_lib.c **** // A. Schilling 8/17  Neue Funktionsnamen; neue Cursorsteuerung
   8:../Libraries/xmc4500_lib.c **** //
   9:../Libraries/xmc4500_lib.c **** // Ansteuerung LCD-Display seriell (4 * 20 Zeichen LCD)
  10:../Libraries/xmc4500_lib.c **** // Filename:  xmc4500_lib.c
  11:../Libraries/xmc4500_lib.c **** // ******************************************************************
  12:../Libraries/xmc4500_lib.c **** void unlock_rtc (void);
  13:../Libraries/xmc4500_lib.c **** uint16_t adc_in (uint8_t kanal);
  14:../Libraries/xmc4500_lib.c **** void adc_init (void);
  15:../Libraries/xmc4500_lib.c **** void ccu4x_enable(void);
  16:../Libraries/xmc4500_lib.c **** void lcd_init(void);		// Init LCD
  17:../Libraries/xmc4500_lib.c **** void lcd_clear(void);	 	// LCD L�schen
  18:../Libraries/xmc4500_lib.c **** void lcd_byte(uint8_t);  	// Ausgabe unsigned char  => 3 stellig
  19:../Libraries/xmc4500_lib.c **** void lcd_int(uint16_t);		// Ausgabe Int Wert => 5 stellig
  20:../Libraries/xmc4500_lib.c **** void lcd_char(int8_t);	   	// Ausgabe eines ASCII Zeichens
  21:../Libraries/xmc4500_lib.c **** void lcd_print(char *ptr);	// Ausgabe String
  22:../Libraries/xmc4500_lib.c **** void lcd_setcursor (uint8_t row, uint8_t column);	// Cursor setzen
  23:../Libraries/xmc4500_lib.c **** void wait_bsy1(void);  		// kurz warten
  24:../Libraries/xmc4500_lib.c **** void wait_bsy2(void); 		// lang warten
  25:../Libraries/xmc4500_lib.c **** void send_byte(uint8_t,uint8_t);
  26:../Libraries/xmc4500_lib.c **** void wait_0(void);
  27:../Libraries/xmc4500_lib.c **** //****************************************************************
  28:../Libraries/xmc4500_lib.c **** // Anschluss des Displays an:
  29:../Libraries/xmc4500_lib.c **** // clk = P5.2  Clock Anschluss LCD
  30:../Libraries/xmc4500_lib.c **** // sod = p5.1
  31:../Libraries/xmc4500_lib.c **** // sid = P5.0	// seriell Input LCD
  32:../Libraries/xmc4500_lib.c **** //****************************************************************
  33:../Libraries/xmc4500_lib.c **** // Sende ein Byte zum Display, senddate ist Bytewert
  34:../Libraries/xmc4500_lib.c **** // rs => Command = 0 und Data = 1
  35:../Libraries/xmc4500_lib.c **** void send_byte(uint8_t senddata, uint8_t rs)
  36:../Libraries/xmc4500_lib.c **** {
  28              	 .loc 1 36 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 86B0     	 sub sp,sp,#24
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 32
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 0346     	 mov r3,r0
  44 0008 0A46     	 mov r2,r1
  45 000a FB71     	 strb r3,[r7,#7]
  46 000c 1346     	 mov r3,r2
  47 000e BB71     	 strb r3,[r7,#6]
  37:../Libraries/xmc4500_lib.c **** 	uint8_t i;
  38:../Libraries/xmc4500_lib.c **** 	uint32_t sendwert, zw;
  39:../Libraries/xmc4500_lib.c **** 	zw = (uint32_t)senddata;   // Typconvertierung
  48              	 .loc 1 39 0
  49 0010 FB79     	 ldrb r3,[r7,#7]
  50 0012 FB60     	 str r3,[r7,#12]
  40:../Libraries/xmc4500_lib.c **** 	sendwert = 0x001f + ((zw & 0xf0)<<12) + ((zw&0x0f)<<8);
  51              	 .loc 1 40 0
  52 0014 FB68     	 ldr r3,[r7,#12]
  53 0016 03F0F003 	 and r3,r3,#240
  54 001a 1A03     	 lsls r2,r3,#12
  55 001c FB68     	 ldr r3,[r7,#12]
  56 001e 03F00F03 	 and r3,r3,#15
  57 0022 1B02     	 lsls r3,r3,#8
  58 0024 1344     	 add r3,r3,r2
  59 0026 1F33     	 adds r3,r3,#31
  60 0028 3B61     	 str r3,[r7,#16]
  41:../Libraries/xmc4500_lib.c **** 	if (rs == 1) sendwert = sendwert + 0x40;
  61              	 .loc 1 41 0
  62 002a BB79     	 ldrb r3,[r7,#6]
  63 002c 012B     	 cmp r3,#1
  64 002e 02D1     	 bne .L2
  65              	 .loc 1 41 0 is_stmt 0 discriminator 1
  66 0030 3B69     	 ldr r3,[r7,#16]
  67 0032 4033     	 adds r3,r3,#64
  68 0034 3B61     	 str r3,[r7,#16]
  69              	.L2:
  42:../Libraries/xmc4500_lib.c **** 	for (i = 0; i<24;i++)	// serielle Ausgabe von 24Bit
  70              	 .loc 1 42 0 is_stmt 1
  71 0036 0023     	 movs r3,#0
  72 0038 FB75     	 strb r3,[r7,#23]
  73 003a 27E0     	 b .L3
  74              	.L6:
  43:../Libraries/xmc4500_lib.c **** 	{  	CLR_BIT (PORT5->OUT,2)  ; // clk = 0;
  75              	 .loc 1 43 0
  76 003c 164A     	 ldr r2,.L7
  77 003e 164B     	 ldr r3,.L7
  78 0040 1B68     	 ldr r3,[r3]
  79 0042 23F00403 	 bic r3,r3,#4
  80 0046 1360     	 str r3,[r2]
  44:../Libraries/xmc4500_lib.c **** 		if ((sendwert & 0x00000001) == 0)  CLR_BIT(PORT5->OUT,0);  //sid = 0;
  81              	 .loc 1 44 0
  82 0048 3B69     	 ldr r3,[r7,#16]
  83 004a 03F00103 	 and r3,r3,#1
  84 004e 002B     	 cmp r3,#0
  85 0050 06D1     	 bne .L4
  86              	 .loc 1 44 0 is_stmt 0 discriminator 1
  87 0052 114A     	 ldr r2,.L7
  88 0054 104B     	 ldr r3,.L7
  89 0056 1B68     	 ldr r3,[r3]
  90 0058 23F00103 	 bic r3,r3,#1
  91 005c 1360     	 str r3,[r2]
  92 005e 05E0     	 b .L5
  93              	.L4:
  45:../Libraries/xmc4500_lib.c **** 		else SET_BIT(PORT5->OUT,0);
  94              	 .loc 1 45 0 is_stmt 1
  95 0060 0D4A     	 ldr r2,.L7
  96 0062 0D4B     	 ldr r3,.L7
  97 0064 1B68     	 ldr r3,[r3]
  98 0066 43F00103 	 orr r3,r3,#1
  99 006a 1360     	 str r3,[r2]
 100              	.L5:
  46:../Libraries/xmc4500_lib.c **** 		wait_0();
 101              	 .loc 1 46 0 discriminator 2
 102 006c FFF7FEFF 	 bl wait_0
  47:../Libraries/xmc4500_lib.c **** 		SET_BIT ( PORT5->OUT, 2);	//sclk = 1;
 103              	 .loc 1 47 0 discriminator 2
 104 0070 094A     	 ldr r2,.L7
 105 0072 094B     	 ldr r3,.L7
 106 0074 1B68     	 ldr r3,[r3]
 107 0076 43F00403 	 orr r3,r3,#4
 108 007a 1360     	 str r3,[r2]
  48:../Libraries/xmc4500_lib.c **** 		wait_0();
 109              	 .loc 1 48 0 discriminator 2
 110 007c FFF7FEFF 	 bl wait_0
  49:../Libraries/xmc4500_lib.c **** 		sendwert = sendwert >> 1;
 111              	 .loc 1 49 0 discriminator 2
 112 0080 3B69     	 ldr r3,[r7,#16]
 113 0082 5B08     	 lsrs r3,r3,#1
 114 0084 3B61     	 str r3,[r7,#16]
  42:../Libraries/xmc4500_lib.c **** 	{  	CLR_BIT (PORT5->OUT,2)  ; // clk = 0;
 115              	 .loc 1 42 0 discriminator 2
 116 0086 FB7D     	 ldrb r3,[r7,#23]
 117 0088 0133     	 adds r3,r3,#1
 118 008a FB75     	 strb r3,[r7,#23]
 119              	.L3:
  42:../Libraries/xmc4500_lib.c **** 	{  	CLR_BIT (PORT5->OUT,2)  ; // clk = 0;
 120              	 .loc 1 42 0 is_stmt 0 discriminator 1
 121 008c FB7D     	 ldrb r3,[r7,#23]
 122 008e 172B     	 cmp r3,#23
 123 0090 D4D9     	 bls .L6
  50:../Libraries/xmc4500_lib.c **** 	}
  51:../Libraries/xmc4500_lib.c **** }
 124              	 .loc 1 51 0 is_stmt 1
 125 0092 1837     	 adds r7,r7,#24
 126              	.LCFI3:
 127              	 .cfi_def_cfa_offset 8
 128 0094 BD46     	 mov sp,r7
 129              	.LCFI4:
 130              	 .cfi_def_cfa_register 13
 131              	 
 132 0096 80BD     	 pop {r7,pc}
 133              	.L8:
 134              	 .align 2
 135              	.L7:
 136 0098 00850248 	 .word 1208124672
 137              	 .cfi_endproc
 138              	.LFE133:
 140              	 .section .text.wait_0,"ax",%progbits
 141              	 .align 2
 142              	 .global wait_0
 143              	 .thumb
 144              	 .thumb_func
 146              	wait_0:
 147              	.LFB134:
  52:../Libraries/xmc4500_lib.c **** void wait_0(void)	// ca. 50 us warten
  53:../Libraries/xmc4500_lib.c **** {
 148              	 .loc 1 53 0
 149              	 .cfi_startproc
 150              	 
 151              	 
 152              	 
 153 0000 80B4     	 push {r7}
 154              	.LCFI5:
 155              	 .cfi_def_cfa_offset 4
 156              	 .cfi_offset 7,-4
 157 0002 83B0     	 sub sp,sp,#12
 158              	.LCFI6:
 159              	 .cfi_def_cfa_offset 16
 160 0004 00AF     	 add r7,sp,#0
 161              	.LCFI7:
 162              	 .cfi_def_cfa_register 7
  54:../Libraries/xmc4500_lib.c **** 	uint16_t zaehler ;
  55:../Libraries/xmc4500_lib.c **** 	for (zaehler = 0; zaehler < 0xf; zaehler++);  // ca. 1 uSek Verz�gerung
 163              	 .loc 1 55 0
 164 0006 0023     	 movs r3,#0
 165 0008 FB80     	 strh r3,[r7,#6]
 166 000a 02E0     	 b .L10
 167              	.L11:
 168              	 .loc 1 55 0 is_stmt 0 discriminator 3
 169 000c FB88     	 ldrh r3,[r7,#6]
 170 000e 0133     	 adds r3,r3,#1
 171 0010 FB80     	 strh r3,[r7,#6]
 172              	.L10:
 173              	 .loc 1 55 0 discriminator 1
 174 0012 FB88     	 ldrh r3,[r7,#6]
 175 0014 0E2B     	 cmp r3,#14
 176 0016 F9D9     	 bls .L11
  56:../Libraries/xmc4500_lib.c **** }
 177              	 .loc 1 56 0 is_stmt 1
 178 0018 0C37     	 adds r7,r7,#12
 179              	.LCFI8:
 180              	 .cfi_def_cfa_offset 4
 181 001a BD46     	 mov sp,r7
 182              	.LCFI9:
 183              	 .cfi_def_cfa_register 13
 184              	 
 185 001c 5DF8047B 	 ldr r7,[sp],#4
 186              	.LCFI10:
 187              	 .cfi_restore 7
 188              	 .cfi_def_cfa_offset 0
 189 0020 7047     	 bx lr
 190              	 .cfi_endproc
 191              	.LFE134:
 193 0022 00BF     	 .section .text.wait_bsy1,"ax",%progbits
 194              	 .align 2
 195              	 .global wait_bsy1
 196              	 .thumb
 197              	 .thumb_func
 199              	wait_bsy1:
 200              	.LFB135:
  57:../Libraries/xmc4500_lib.c **** void wait_bsy1(void)	// ca. 50 us warten
  58:../Libraries/xmc4500_lib.c **** {
 201              	 .loc 1 58 0
 202              	 .cfi_startproc
 203              	 
 204              	 
 205              	 
 206 0000 80B4     	 push {r7}
 207              	.LCFI11:
 208              	 .cfi_def_cfa_offset 4
 209              	 .cfi_offset 7,-4
 210 0002 83B0     	 sub sp,sp,#12
 211              	.LCFI12:
 212              	 .cfi_def_cfa_offset 16
 213 0004 00AF     	 add r7,sp,#0
 214              	.LCFI13:
 215              	 .cfi_def_cfa_register 7
  59:../Libraries/xmc4500_lib.c **** 	uint16_t zaehler ;
  60:../Libraries/xmc4500_lib.c **** 	for (zaehler = 0; zaehler < 0x7ff; zaehler++);
 216              	 .loc 1 60 0
 217 0006 0023     	 movs r3,#0
 218 0008 FB80     	 strh r3,[r7,#6]
 219 000a 02E0     	 b .L13
 220              	.L14:
 221              	 .loc 1 60 0 is_stmt 0 discriminator 3
 222 000c FB88     	 ldrh r3,[r7,#6]
 223 000e 0133     	 adds r3,r3,#1
 224 0010 FB80     	 strh r3,[r7,#6]
 225              	.L13:
 226              	 .loc 1 60 0 discriminator 1
 227 0012 FB88     	 ldrh r3,[r7,#6]
 228 0014 40F2FE72 	 movw r2,#2046
 229 0018 9342     	 cmp r3,r2
 230 001a F7D9     	 bls .L14
  61:../Libraries/xmc4500_lib.c **** }
 231              	 .loc 1 61 0 is_stmt 1
 232 001c 0C37     	 adds r7,r7,#12
 233              	.LCFI14:
 234              	 .cfi_def_cfa_offset 4
 235 001e BD46     	 mov sp,r7
 236              	.LCFI15:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0020 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI16:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0024 7047     	 bx lr
 244              	 .cfi_endproc
 245              	.LFE135:
 247 0026 00BF     	 .section .text.wait_bsy2,"ax",%progbits
 248              	 .align 2
 249              	 .global wait_bsy2
 250              	 .thumb
 251              	 .thumb_func
 253              	wait_bsy2:
 254              	.LFB136:
  62:../Libraries/xmc4500_lib.c **** void wait_bsy2(void)	  // ca. 1.6 ms warten
  63:../Libraries/xmc4500_lib.c **** {
 255              	 .loc 1 63 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259              	 
 260 0000 80B4     	 push {r7}
 261              	.LCFI17:
 262              	 .cfi_def_cfa_offset 4
 263              	 .cfi_offset 7,-4
 264 0002 83B0     	 sub sp,sp,#12
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 16
 267 0004 00AF     	 add r7,sp,#0
 268              	.LCFI19:
 269              	 .cfi_def_cfa_register 7
  64:../Libraries/xmc4500_lib.c **** 	uint16_t zaehler ;
  65:../Libraries/xmc4500_lib.c **** 	for (zaehler = 0; zaehler < 0x7fff; zaehler++);
 270              	 .loc 1 65 0
 271 0006 0023     	 movs r3,#0
 272 0008 FB80     	 strh r3,[r7,#6]
 273 000a 02E0     	 b .L16
 274              	.L17:
 275              	 .loc 1 65 0 is_stmt 0 discriminator 3
 276 000c FB88     	 ldrh r3,[r7,#6]
 277 000e 0133     	 adds r3,r3,#1
 278 0010 FB80     	 strh r3,[r7,#6]
 279              	.L16:
 280              	 .loc 1 65 0 discriminator 1
 281 0012 FB88     	 ldrh r3,[r7,#6]
 282 0014 47F6FE72 	 movw r2,#32766
 283 0018 9342     	 cmp r3,r2
 284 001a F7D9     	 bls .L17
  66:../Libraries/xmc4500_lib.c **** }
 285              	 .loc 1 66 0 is_stmt 1
 286 001c 0C37     	 adds r7,r7,#12
 287              	.LCFI20:
 288              	 .cfi_def_cfa_offset 4
 289 001e BD46     	 mov sp,r7
 290              	.LCFI21:
 291              	 .cfi_def_cfa_register 13
 292              	 
 293 0020 5DF8047B 	 ldr r7,[sp],#4
 294              	.LCFI22:
 295              	 .cfi_restore 7
 296              	 .cfi_def_cfa_offset 0
 297 0024 7047     	 bx lr
 298              	 .cfi_endproc
 299              	.LFE136:
 301 0026 00BF     	 .section .text.lcd_init,"ax",%progbits
 302              	 .align 2
 303              	 .global lcd_init
 304              	 .thumb
 305              	 .thumb_func
 307              	lcd_init:
 308              	.LFB137:
  67:../Libraries/xmc4500_lib.c **** void lcd_init(void)
  68:../Libraries/xmc4500_lib.c **** { 	// P5.0 => OUT
 309              	 .loc 1 68 0
 310              	 .cfi_startproc
 311              	 
 312              	 
 313 0000 80B5     	 push {r7,lr}
 314              	.LCFI23:
 315              	 .cfi_def_cfa_offset 8
 316              	 .cfi_offset 7,-8
 317              	 .cfi_offset 14,-4
 318 0002 00AF     	 add r7,sp,#0
 319              	.LCFI24:
 320              	 .cfi_def_cfa_register 7
  69:../Libraries/xmc4500_lib.c **** 	PORT5->IOCR0 = PORT5->IOCR0 & 0xff000000; 	// P5.0, P5.1, P5.2
 321              	 .loc 1 69 0
 322 0004 1A4A     	 ldr r2,.L19
 323 0006 1A4B     	 ldr r3,.L19
 324 0008 1B69     	 ldr r3,[r3,#16]
 325 000a 03F07F43 	 and r3,r3,#-16777216
 326 000e 1361     	 str r3,[r2,#16]
  70:../Libraries/xmc4500_lib.c **** 	PORT5->IOCR0 = PORT5->IOCR0 | 0x00800080;	// P5.0, P5.2 => OUT
 327              	 .loc 1 70 0
 328 0010 174A     	 ldr r2,.L19
 329 0012 174B     	 ldr r3,.L19
 330 0014 1B69     	 ldr r3,[r3,#16]
 331 0016 43F08013 	 orr r3,r3,#8388736
 332 001a 1361     	 str r3,[r2,#16]
  71:../Libraries/xmc4500_lib.c **** 
  72:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 333              	 .loc 1 72 0
 334 001c FFF7FEFF 	 bl wait_bsy2
  73:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 335              	 .loc 1 73 0
 336 0020 FFF7FEFF 	 bl wait_bsy2
  74:../Libraries/xmc4500_lib.c **** 	// LCD Init
  75:../Libraries/xmc4500_lib.c **** 	send_byte(0x34,0); 			// 8 Bit Mode
 337              	 .loc 1 75 0
 338 0024 3420     	 movs r0,#52
 339 0026 0021     	 movs r1,#0
 340 0028 FFF7FEFF 	 bl send_byte
  76:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 341              	 .loc 1 76 0
 342 002c FFF7FEFF 	 bl wait_bsy2
  77:../Libraries/xmc4500_lib.c **** 	send_byte(0x09,0); 			// 4 Zeilen Mode
 343              	 .loc 1 77 0
 344 0030 0920     	 movs r0,#9
 345 0032 0021     	 movs r1,#0
 346 0034 FFF7FEFF 	 bl send_byte
  78:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 347              	 .loc 1 78 0
 348 0038 FFF7FEFF 	 bl wait_bsy2
  79:../Libraries/xmc4500_lib.c **** 	send_byte(0x30,0); 			// 8 Bit Datenl�ge
 349              	 .loc 1 79 0
 350 003c 3020     	 movs r0,#48
 351 003e 0021     	 movs r1,#0
 352 0040 FFF7FEFF 	 bl send_byte
  80:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 353              	 .loc 1 80 0
 354 0044 FFF7FEFF 	 bl wait_bsy2
  81:../Libraries/xmc4500_lib.c **** 	send_byte(0x0f,0); 			// display ein , Cursor ein
 355              	 .loc 1 81 0
 356 0048 0F20     	 movs r0,#15
 357 004a 0021     	 movs r1,#0
 358 004c FFF7FEFF 	 bl send_byte
  82:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 359              	 .loc 1 82 0
 360 0050 FFF7FEFF 	 bl wait_bsy2
  83:../Libraries/xmc4500_lib.c **** 	send_byte(0x01,0); 			// clear Display
 361              	 .loc 1 83 0
 362 0054 0120     	 movs r0,#1
 363 0056 0021     	 movs r1,#0
 364 0058 FFF7FEFF 	 bl send_byte
  84:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 365              	 .loc 1 84 0
 366 005c FFF7FEFF 	 bl wait_bsy2
  85:../Libraries/xmc4500_lib.c **** 	send_byte(0x07,0); 			// Cursor autoincrement
 367              	 .loc 1 85 0
 368 0060 0720     	 movs r0,#7
 369 0062 0021     	 movs r1,#0
 370 0064 FFF7FEFF 	 bl send_byte
  86:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 371              	 .loc 1 86 0
 372 0068 FFF7FEFF 	 bl wait_bsy2
  87:../Libraries/xmc4500_lib.c **** }
 373              	 .loc 1 87 0
 374 006c 80BD     	 pop {r7,pc}
 375              	.L20:
 376 006e 00BF     	 .align 2
 377              	.L19:
 378 0070 00850248 	 .word 1208124672
 379              	 .cfi_endproc
 380              	.LFE137:
 382              	 .section .text.lcd_clear,"ax",%progbits
 383              	 .align 2
 384              	 .global lcd_clear
 385              	 .thumb
 386              	 .thumb_func
 388              	lcd_clear:
 389              	.LFB138:
  88:../Libraries/xmc4500_lib.c **** void lcd_clear(void)
  89:../Libraries/xmc4500_lib.c **** {   send_byte( 01 ,0);  // CLR Befehl
 390              	 .loc 1 89 0
 391              	 .cfi_startproc
 392              	 
 393              	 
 394 0000 80B5     	 push {r7,lr}
 395              	.LCFI25:
 396              	 .cfi_def_cfa_offset 8
 397              	 .cfi_offset 7,-8
 398              	 .cfi_offset 14,-4
 399 0002 00AF     	 add r7,sp,#0
 400              	.LCFI26:
 401              	 .cfi_def_cfa_register 7
 402              	 .loc 1 89 0
 403 0004 0120     	 movs r0,#1
 404 0006 0021     	 movs r1,#0
 405 0008 FFF7FEFF 	 bl send_byte
  90:../Libraries/xmc4500_lib.c **** 	wait_bsy2();
 406              	 .loc 1 90 0
 407 000c FFF7FEFF 	 bl wait_bsy2
  91:../Libraries/xmc4500_lib.c **** 	send_byte( 0x0e ,0); // Cursor on
 408              	 .loc 1 91 0
 409 0010 0E20     	 movs r0,#14
 410 0012 0021     	 movs r1,#0
 411 0014 FFF7FEFF 	 bl send_byte
  92:../Libraries/xmc4500_lib.c **** 	wait_bsy1();
 412              	 .loc 1 92 0
 413 0018 FFF7FEFF 	 bl wait_bsy1
  93:../Libraries/xmc4500_lib.c **** }
 414              	 .loc 1 93 0
 415 001c 80BD     	 pop {r7,pc}
 416              	 .cfi_endproc
 417              	.LFE138:
 419 001e 00BF     	 .section .text.lcd_char,"ax",%progbits
 420              	 .align 2
 421              	 .global lcd_char
 422              	 .thumb
 423              	 .thumb_func
 425              	lcd_char:
 426              	.LFB139:
  94:../Libraries/xmc4500_lib.c **** void lcd_char(int8_t zeichen)
  95:../Libraries/xmc4500_lib.c **** {
 427              	 .loc 1 95 0
 428              	 .cfi_startproc
 429              	 
 430              	 
 431 0000 80B5     	 push {r7,lr}
 432              	.LCFI27:
 433              	 .cfi_def_cfa_offset 8
 434              	 .cfi_offset 7,-8
 435              	 .cfi_offset 14,-4
 436 0002 82B0     	 sub sp,sp,#8
 437              	.LCFI28:
 438              	 .cfi_def_cfa_offset 16
 439 0004 00AF     	 add r7,sp,#0
 440              	.LCFI29:
 441              	 .cfi_def_cfa_register 7
 442 0006 0346     	 mov r3,r0
 443 0008 FB71     	 strb r3,[r7,#7]
  96:../Libraries/xmc4500_lib.c **** 	send_byte(zeichen,1);
 444              	 .loc 1 96 0
 445 000a FB79     	 ldrb r3,[r7,#7]
 446 000c 1846     	 mov r0,r3
 447 000e 0121     	 movs r1,#1
 448 0010 FFF7FEFF 	 bl send_byte
  97:../Libraries/xmc4500_lib.c **** 	wait_bsy1();
 449              	 .loc 1 97 0
 450 0014 FFF7FEFF 	 bl wait_bsy1
  98:../Libraries/xmc4500_lib.c **** 	wait_bsy1();
 451              	 .loc 1 98 0
 452 0018 FFF7FEFF 	 bl wait_bsy1
  99:../Libraries/xmc4500_lib.c **** }
 453              	 .loc 1 99 0
 454 001c 0837     	 adds r7,r7,#8
 455              	.LCFI30:
 456              	 .cfi_def_cfa_offset 8
 457 001e BD46     	 mov sp,r7
 458              	.LCFI31:
 459              	 .cfi_def_cfa_register 13
 460              	 
 461 0020 80BD     	 pop {r7,pc}
 462              	 .cfi_endproc
 463              	.LFE139:
 465 0022 00BF     	 .section .text.lcd_print,"ax",%progbits
 466              	 .align 2
 467              	 .global lcd_print
 468              	 .thumb
 469              	 .thumb_func
 471              	lcd_print:
 472              	.LFB140:
 100:../Libraries/xmc4500_lib.c **** void lcd_print(char *ptr)
 101:../Libraries/xmc4500_lib.c **** {
 473              	 .loc 1 101 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477 0000 80B5     	 push {r7,lr}
 478              	.LCFI32:
 479              	 .cfi_def_cfa_offset 8
 480              	 .cfi_offset 7,-8
 481              	 .cfi_offset 14,-4
 482 0002 84B0     	 sub sp,sp,#16
 483              	.LCFI33:
 484              	 .cfi_def_cfa_offset 24
 485 0004 00AF     	 add r7,sp,#0
 486              	.LCFI34:
 487              	 .cfi_def_cfa_register 7
 488 0006 7860     	 str r0,[r7,#4]
 102:../Libraries/xmc4500_lib.c **** 	uint8_t i=0;
 489              	 .loc 1 102 0
 490 0008 0023     	 movs r3,#0
 491 000a FB73     	 strb r3,[r7,#15]
 103:../Libraries/xmc4500_lib.c **** 	while (*ptr != 0 )
 492              	 .loc 1 103 0
 493 000c 21E0     	 b .L24
 494              	.L27:
 104:../Libraries/xmc4500_lib.c **** 	{
 105:../Libraries/xmc4500_lib.c **** 		lcd_char(*ptr);
 495              	 .loc 1 105 0
 496 000e 7B68     	 ldr r3,[r7,#4]
 497 0010 1B78     	 ldrb r3,[r3]
 498 0012 DBB2     	 uxtb r3,r3
 499 0014 5BB2     	 sxtb r3,r3
 500 0016 1846     	 mov r0,r3
 501 0018 FFF7FEFF 	 bl lcd_char
 106:../Libraries/xmc4500_lib.c **** 	  	ptr++;
 502              	 .loc 1 106 0
 503 001c 7B68     	 ldr r3,[r7,#4]
 504 001e 0133     	 adds r3,r3,#1
 505 0020 7B60     	 str r3,[r7,#4]
 107:../Libraries/xmc4500_lib.c **** 	  	i++;
 506              	 .loc 1 107 0
 507 0022 FB7B     	 ldrb r3,[r7,#15]
 508 0024 0133     	 adds r3,r3,#1
 509 0026 FB73     	 strb r3,[r7,#15]
 108:../Libraries/xmc4500_lib.c **** 	  	if (i == 20) lcd_setcursor(2,1);
 510              	 .loc 1 108 0
 511 0028 FB7B     	 ldrb r3,[r7,#15]
 512 002a 142B     	 cmp r3,#20
 513 002c 03D1     	 bne .L25
 514              	 .loc 1 108 0 is_stmt 0 discriminator 1
 515 002e 0220     	 movs r0,#2
 516 0030 0121     	 movs r1,#1
 517 0032 FFF7FEFF 	 bl lcd_setcursor
 518              	.L25:
 109:../Libraries/xmc4500_lib.c **** 	  	if (i == 40) lcd_setcursor(3,1);
 519              	 .loc 1 109 0 is_stmt 1
 520 0036 FB7B     	 ldrb r3,[r7,#15]
 521 0038 282B     	 cmp r3,#40
 522 003a 03D1     	 bne .L26
 523              	 .loc 1 109 0 is_stmt 0 discriminator 1
 524 003c 0320     	 movs r0,#3
 525 003e 0121     	 movs r1,#1
 526 0040 FFF7FEFF 	 bl lcd_setcursor
 527              	.L26:
 110:../Libraries/xmc4500_lib.c **** 	  	if (i == 60) lcd_setcursor(4,1);
 528              	 .loc 1 110 0 is_stmt 1
 529 0044 FB7B     	 ldrb r3,[r7,#15]
 530 0046 3C2B     	 cmp r3,#60
 531 0048 03D1     	 bne .L24
 532              	 .loc 1 110 0 is_stmt 0 discriminator 1
 533 004a 0420     	 movs r0,#4
 534 004c 0121     	 movs r1,#1
 535 004e FFF7FEFF 	 bl lcd_setcursor
 536              	.L24:
 103:../Libraries/xmc4500_lib.c **** 	{
 537              	 .loc 1 103 0 is_stmt 1
 538 0052 7B68     	 ldr r3,[r7,#4]
 539 0054 1B78     	 ldrb r3,[r3]
 540 0056 002B     	 cmp r3,#0
 541 0058 D9D1     	 bne .L27
 111:../Libraries/xmc4500_lib.c **** 	}
 112:../Libraries/xmc4500_lib.c **** }
 542              	 .loc 1 112 0
 543 005a 1037     	 adds r7,r7,#16
 544              	.LCFI35:
 545              	 .cfi_def_cfa_offset 8
 546 005c BD46     	 mov sp,r7
 547              	.LCFI36:
 548              	 .cfi_def_cfa_register 13
 549              	 
 550 005e 80BD     	 pop {r7,pc}
 551              	 .cfi_endproc
 552              	.LFE140:
 554              	 .section .text.lcd_byte,"ax",%progbits
 555              	 .align 2
 556              	 .global lcd_byte
 557              	 .thumb
 558              	 .thumb_func
 560              	lcd_byte:
 561              	.LFB141:
 113:../Libraries/xmc4500_lib.c **** void lcd_byte(uint8_t wert)
 114:../Libraries/xmc4500_lib.c **** {
 562              	 .loc 1 114 0
 563              	 .cfi_startproc
 564              	 
 565              	 
 566 0000 80B5     	 push {r7,lr}
 567              	.LCFI37:
 568              	 .cfi_def_cfa_offset 8
 569              	 .cfi_offset 7,-8
 570              	 .cfi_offset 14,-4
 571 0002 84B0     	 sub sp,sp,#16
 572              	.LCFI38:
 573              	 .cfi_def_cfa_offset 24
 574 0004 00AF     	 add r7,sp,#0
 575              	.LCFI39:
 576              	 .cfi_def_cfa_register 7
 577 0006 0346     	 mov r3,r0
 578 0008 FB71     	 strb r3,[r7,#7]
 115:../Libraries/xmc4500_lib.c **** 	uint8_t i;
 116:../Libraries/xmc4500_lib.c **** 
 117:../Libraries/xmc4500_lib.c **** 	i = wert / 100;
 579              	 .loc 1 117 0
 580 000a FB79     	 ldrb r3,[r7,#7]
 581 000c 1D4A     	 ldr r2,.L29
 582 000e A2FB0323 	 umull r2,r3,r2,r3
 583 0012 5B09     	 lsrs r3,r3,#5
 584 0014 FB73     	 strb r3,[r7,#15]
 118:../Libraries/xmc4500_lib.c **** 	wert %= 100;
 585              	 .loc 1 118 0
 586 0016 FB79     	 ldrb r3,[r7,#7]
 587 0018 1A4A     	 ldr r2,.L29
 588 001a A2FB0312 	 umull r1,r2,r2,r3
 589 001e 5209     	 lsrs r2,r2,#5
 590 0020 6421     	 movs r1,#100
 591 0022 01FB02F2 	 mul r2,r1,r2
 592 0026 9B1A     	 subs r3,r3,r2
 593 0028 FB71     	 strb r3,[r7,#7]
 119:../Libraries/xmc4500_lib.c **** 	i += 0x30;
 594              	 .loc 1 119 0
 595 002a FB7B     	 ldrb r3,[r7,#15]
 596 002c 3033     	 adds r3,r3,#48
 597 002e FB73     	 strb r3,[r7,#15]
 120:../Libraries/xmc4500_lib.c **** 	lcd_char(i);
 598              	 .loc 1 120 0
 599 0030 FB7B     	 ldrb r3,[r7,#15]
 600 0032 5BB2     	 sxtb r3,r3
 601 0034 1846     	 mov r0,r3
 602 0036 FFF7FEFF 	 bl lcd_char
 121:../Libraries/xmc4500_lib.c **** 	i = wert / 10;
 603              	 .loc 1 121 0
 604 003a FB79     	 ldrb r3,[r7,#7]
 605 003c 124A     	 ldr r2,.L29+4
 606 003e A2FB0323 	 umull r2,r3,r2,r3
 607 0042 DB08     	 lsrs r3,r3,#3
 608 0044 FB73     	 strb r3,[r7,#15]
 122:../Libraries/xmc4500_lib.c **** 	wert %= 10 ;
 609              	 .loc 1 122 0
 610 0046 FA79     	 ldrb r2,[r7,#7]
 611 0048 0F4B     	 ldr r3,.L29+4
 612 004a A3FB0213 	 umull r1,r3,r3,r2
 613 004e D908     	 lsrs r1,r3,#3
 614 0050 0B46     	 mov r3,r1
 615 0052 9B00     	 lsls r3,r3,#2
 616 0054 0B44     	 add r3,r3,r1
 617 0056 5B00     	 lsls r3,r3,#1
 618 0058 D31A     	 subs r3,r2,r3
 619 005a FB71     	 strb r3,[r7,#7]
 123:../Libraries/xmc4500_lib.c **** 	i += 0x30;
 620              	 .loc 1 123 0
 621 005c FB7B     	 ldrb r3,[r7,#15]
 622 005e 3033     	 adds r3,r3,#48
 623 0060 FB73     	 strb r3,[r7,#15]
 124:../Libraries/xmc4500_lib.c **** 	lcd_char(i);
 624              	 .loc 1 124 0
 625 0062 FB7B     	 ldrb r3,[r7,#15]
 626 0064 5BB2     	 sxtb r3,r3
 627 0066 1846     	 mov r0,r3
 628 0068 FFF7FEFF 	 bl lcd_char
 125:../Libraries/xmc4500_lib.c **** 	wert += 0x30;
 629              	 .loc 1 125 0
 630 006c FB79     	 ldrb r3,[r7,#7]
 631 006e 3033     	 adds r3,r3,#48
 632 0070 FB71     	 strb r3,[r7,#7]
 126:../Libraries/xmc4500_lib.c **** 	lcd_char(wert);
 633              	 .loc 1 126 0
 634 0072 FB79     	 ldrb r3,[r7,#7]
 635 0074 5BB2     	 sxtb r3,r3
 636 0076 1846     	 mov r0,r3
 637 0078 FFF7FEFF 	 bl lcd_char
 127:../Libraries/xmc4500_lib.c **** }
 638              	 .loc 1 127 0
 639 007c 1037     	 adds r7,r7,#16
 640              	.LCFI40:
 641              	 .cfi_def_cfa_offset 8
 642 007e BD46     	 mov sp,r7
 643              	.LCFI41:
 644              	 .cfi_def_cfa_register 13
 645              	 
 646 0080 80BD     	 pop {r7,pc}
 647              	.L30:
 648 0082 00BF     	 .align 2
 649              	.L29:
 650 0084 1F85EB51 	 .word 1374389535
 651 0088 CDCCCCCC 	 .word -858993459
 652              	 .cfi_endproc
 653              	.LFE141:
 655              	 .section .text.lcd_int,"ax",%progbits
 656              	 .align 2
 657              	 .global lcd_int
 658              	 .thumb
 659              	 .thumb_func
 661              	lcd_int:
 662              	.LFB142:
 128:../Libraries/xmc4500_lib.c **** void lcd_int(uint16_t wert_16)
 129:../Libraries/xmc4500_lib.c **** {	// Ausgabe von 0 bis 99999 !!!!
 663              	 .loc 1 129 0
 664              	 .cfi_startproc
 665              	 
 666              	 
 667 0000 80B5     	 push {r7,lr}
 668              	.LCFI42:
 669              	 .cfi_def_cfa_offset 8
 670              	 .cfi_offset 7,-8
 671              	 .cfi_offset 14,-4
 672 0002 84B0     	 sub sp,sp,#16
 673              	.LCFI43:
 674              	 .cfi_def_cfa_offset 24
 675 0004 00AF     	 add r7,sp,#0
 676              	.LCFI44:
 677              	 .cfi_def_cfa_register 7
 678 0006 0346     	 mov r3,r0
 679 0008 FB80     	 strh r3,[r7,#6]
 130:../Libraries/xmc4500_lib.c **** 	uint8_t i;
 131:../Libraries/xmc4500_lib.c **** 
 132:../Libraries/xmc4500_lib.c **** 	i = wert_16 / 10000; 	// Anzahl 1000er
 680              	 .loc 1 132 0
 681 000a FB88     	 ldrh r3,[r7,#6]
 682 000c 384A     	 ldr r2,.L32
 683 000e A2FB0323 	 umull r2,r3,r2,r3
 684 0012 5B0B     	 lsrs r3,r3,#13
 685 0014 9BB2     	 uxth r3,r3
 686 0016 FB73     	 strb r3,[r7,#15]
 133:../Libraries/xmc4500_lib.c **** 	wert_16 %= 10000;			// Rest nach 1000er Division
 687              	 .loc 1 133 0
 688 0018 FB88     	 ldrh r3,[r7,#6]
 689 001a 354A     	 ldr r2,.L32
 690 001c A2FB0312 	 umull r1,r2,r2,r3
 691 0020 520B     	 lsrs r2,r2,#13
 692 0022 42F21071 	 movw r1,#10000
 693 0026 01FB02F2 	 mul r2,r1,r2
 694 002a 9B1A     	 subs r3,r3,r2
 695 002c FB80     	 strh r3,[r7,#6]
 134:../Libraries/xmc4500_lib.c **** 	lcd_char(i+0x30);   	 	// Ausgabe als ASCII Zeichen
 696              	 .loc 1 134 0
 697 002e FB7B     	 ldrb r3,[r7,#15]
 698 0030 3033     	 adds r3,r3,#48
 699 0032 DBB2     	 uxtb r3,r3
 700 0034 DBB2     	 uxtb r3,r3
 701 0036 5BB2     	 sxtb r3,r3
 702 0038 1846     	 mov r0,r3
 703 003a FFF7FEFF 	 bl lcd_char
 135:../Libraries/xmc4500_lib.c **** 	i = wert_16 / 1000; 	// Anzahl 1000er
 704              	 .loc 1 135 0
 705 003e FB88     	 ldrh r3,[r7,#6]
 706 0040 2C4A     	 ldr r2,.L32+4
 707 0042 A2FB0323 	 umull r2,r3,r2,r3
 708 0046 9B09     	 lsrs r3,r3,#6
 709 0048 9BB2     	 uxth r3,r3
 710 004a FB73     	 strb r3,[r7,#15]
 136:../Libraries/xmc4500_lib.c **** 	wert_16 %= 1000;			// Rest nach 1000er Division
 711              	 .loc 1 136 0
 712 004c FB88     	 ldrh r3,[r7,#6]
 713 004e 294A     	 ldr r2,.L32+4
 714 0050 A2FB0312 	 umull r1,r2,r2,r3
 715 0054 9209     	 lsrs r2,r2,#6
 716 0056 4FF47A71 	 mov r1,#1000
 717 005a 01FB02F2 	 mul r2,r1,r2
 718 005e 9B1A     	 subs r3,r3,r2
 719 0060 FB80     	 strh r3,[r7,#6]
 137:../Libraries/xmc4500_lib.c **** 	lcd_char(i+0x30);    	// Ausgabe als ASCII Zeichen
 720              	 .loc 1 137 0
 721 0062 FB7B     	 ldrb r3,[r7,#15]
 722 0064 3033     	 adds r3,r3,#48
 723 0066 DBB2     	 uxtb r3,r3
 724 0068 DBB2     	 uxtb r3,r3
 725 006a 5BB2     	 sxtb r3,r3
 726 006c 1846     	 mov r0,r3
 727 006e FFF7FEFF 	 bl lcd_char
 138:../Libraries/xmc4500_lib.c **** 	i= wert_16 / 100;
 728              	 .loc 1 138 0
 729 0072 FB88     	 ldrh r3,[r7,#6]
 730 0074 204A     	 ldr r2,.L32+8
 731 0076 A2FB0323 	 umull r2,r3,r2,r3
 732 007a 5B09     	 lsrs r3,r3,#5
 733 007c 9BB2     	 uxth r3,r3
 734 007e FB73     	 strb r3,[r7,#15]
 139:../Libraries/xmc4500_lib.c **** 	wert_16 %= 100;
 735              	 .loc 1 139 0
 736 0080 FB88     	 ldrh r3,[r7,#6]
 737 0082 1D4A     	 ldr r2,.L32+8
 738 0084 A2FB0312 	 umull r1,r2,r2,r3
 739 0088 5209     	 lsrs r2,r2,#5
 740 008a 6421     	 movs r1,#100
 741 008c 01FB02F2 	 mul r2,r1,r2
 742 0090 9B1A     	 subs r3,r3,r2
 743 0092 FB80     	 strh r3,[r7,#6]
 140:../Libraries/xmc4500_lib.c **** 	lcd_char(i+0x30);
 744              	 .loc 1 140 0
 745 0094 FB7B     	 ldrb r3,[r7,#15]
 746 0096 3033     	 adds r3,r3,#48
 747 0098 DBB2     	 uxtb r3,r3
 748 009a DBB2     	 uxtb r3,r3
 749 009c 5BB2     	 sxtb r3,r3
 750 009e 1846     	 mov r0,r3
 751 00a0 FFF7FEFF 	 bl lcd_char
 141:../Libraries/xmc4500_lib.c **** 	i = wert_16 / 10;
 752              	 .loc 1 141 0
 753 00a4 FB88     	 ldrh r3,[r7,#6]
 754 00a6 154A     	 ldr r2,.L32+12
 755 00a8 A2FB0323 	 umull r2,r3,r2,r3
 756 00ac DB08     	 lsrs r3,r3,#3
 757 00ae 9BB2     	 uxth r3,r3
 758 00b0 FB73     	 strb r3,[r7,#15]
 142:../Libraries/xmc4500_lib.c **** 	wert_16 %= 10;
 759              	 .loc 1 142 0
 760 00b2 FA88     	 ldrh r2,[r7,#6]
 761 00b4 114B     	 ldr r3,.L32+12
 762 00b6 A3FB0213 	 umull r1,r3,r3,r2
 763 00ba D908     	 lsrs r1,r3,#3
 764 00bc 0B46     	 mov r3,r1
 765 00be 9B00     	 lsls r3,r3,#2
 766 00c0 0B44     	 add r3,r3,r1
 767 00c2 5B00     	 lsls r3,r3,#1
 768 00c4 D31A     	 subs r3,r2,r3
 769 00c6 FB80     	 strh r3,[r7,#6]
 143:../Libraries/xmc4500_lib.c **** 	lcd_char(i+0x30);
 770              	 .loc 1 143 0
 771 00c8 FB7B     	 ldrb r3,[r7,#15]
 772 00ca 3033     	 adds r3,r3,#48
 773 00cc DBB2     	 uxtb r3,r3
 774 00ce DBB2     	 uxtb r3,r3
 775 00d0 5BB2     	 sxtb r3,r3
 776 00d2 1846     	 mov r0,r3
 777 00d4 FFF7FEFF 	 bl lcd_char
 144:../Libraries/xmc4500_lib.c **** 	wert_16 += 0x30;
 778              	 .loc 1 144 0
 779 00d8 FB88     	 ldrh r3,[r7,#6]
 780 00da 3033     	 adds r3,r3,#48
 781 00dc FB80     	 strh r3,[r7,#6]
 145:../Libraries/xmc4500_lib.c **** 	lcd_char((char)wert_16);
 782              	 .loc 1 145 0
 783 00de FB88     	 ldrh r3,[r7,#6]
 784 00e0 DBB2     	 uxtb r3,r3
 785 00e2 5BB2     	 sxtb r3,r3
 786 00e4 1846     	 mov r0,r3
 787 00e6 FFF7FEFF 	 bl lcd_char
 146:../Libraries/xmc4500_lib.c **** }
 788              	 .loc 1 146 0
 789 00ea 1037     	 adds r7,r7,#16
 790              	.LCFI45:
 791              	 .cfi_def_cfa_offset 8
 792 00ec BD46     	 mov sp,r7
 793              	.LCFI46:
 794              	 .cfi_def_cfa_register 13
 795              	 
 796 00ee 80BD     	 pop {r7,pc}
 797              	.L33:
 798              	 .align 2
 799              	.L32:
 800 00f0 5917B7D1 	 .word -776530087
 801 00f4 D34D6210 	 .word 274877907
 802 00f8 1F85EB51 	 .word 1374389535
 803 00fc CDCCCCCC 	 .word -858993459
 804              	 .cfi_endproc
 805              	.LFE142:
 807              	 .section .text.lcd_setcursor,"ax",%progbits
 808              	 .align 2
 809              	 .global lcd_setcursor
 810              	 .thumb
 811              	 .thumb_func
 813              	lcd_setcursor:
 814              	.LFB143:
 147:../Libraries/xmc4500_lib.c **** void lcd_setcursor( uint8_t zeile, uint8_t spalte )
 148:../Libraries/xmc4500_lib.c **** {
 815              	 .loc 1 148 0
 816              	 .cfi_startproc
 817              	 
 818              	 
 819 0000 80B5     	 push {r7,lr}
 820              	.LCFI47:
 821              	 .cfi_def_cfa_offset 8
 822              	 .cfi_offset 7,-8
 823              	 .cfi_offset 14,-4
 824 0002 84B0     	 sub sp,sp,#16
 825              	.LCFI48:
 826              	 .cfi_def_cfa_offset 24
 827 0004 00AF     	 add r7,sp,#0
 828              	.LCFI49:
 829              	 .cfi_def_cfa_register 7
 830 0006 0346     	 mov r3,r0
 831 0008 0A46     	 mov r2,r1
 832 000a FB71     	 strb r3,[r7,#7]
 833 000c 1346     	 mov r3,r2
 834 000e BB71     	 strb r3,[r7,#6]
 149:../Libraries/xmc4500_lib.c ****   uint8_t position;
 150:../Libraries/xmc4500_lib.c ****   switch(zeile)
 835              	 .loc 1 150 0
 836 0010 FB79     	 ldrb r3,[r7,#7]
 837 0012 013B     	 subs r3,r3,#1
 838 0014 032B     	 cmp r3,#3
 839 0016 17D8     	 bhi .L35
 840 0018 01A2     	 adr r2,.L37
 841 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 842 001e 00BF     	 .p2align 2
 843              	.L37:
 844 0020 31000000 	 .word .L36+1
 845 0024 37000000 	 .word .L38+1
 846 0028 3D000000 	 .word .L39+1
 847 002c 43000000 	 .word .L40+1
 848              	 .p2align 1
 849              	.L36:
 151:../Libraries/xmc4500_lib.c ****   {
 152:../Libraries/xmc4500_lib.c ****     case 1:  position = 0x00; break;
 850              	 .loc 1 152 0
 851 0030 0023     	 movs r3,#0
 852 0032 FB73     	 strb r3,[r7,#15]
 853 0034 0BE0     	 b .L41
 854              	.L38:
 153:../Libraries/xmc4500_lib.c ****     case 2:  position = 0x20; break;
 855              	 .loc 1 153 0
 856 0036 2023     	 movs r3,#32
 857 0038 FB73     	 strb r3,[r7,#15]
 858 003a 08E0     	 b .L41
 859              	.L39:
 154:../Libraries/xmc4500_lib.c ****     case 3:  position = 0x40; break;
 860              	 .loc 1 154 0
 861 003c 4023     	 movs r3,#64
 862 003e FB73     	 strb r3,[r7,#15]
 863 0040 05E0     	 b .L41
 864              	.L40:
 155:../Libraries/xmc4500_lib.c ****     case 4:  position = 0x60; break;
 865              	 .loc 1 155 0
 866 0042 6023     	 movs r3,#96
 867 0044 FB73     	 strb r3,[r7,#15]
 868 0046 02E0     	 b .L41
 869              	.L35:
 156:../Libraries/xmc4500_lib.c ****     default: position = 0x00; break;
 870              	 .loc 1 156 0
 871 0048 0023     	 movs r3,#0
 872 004a FB73     	 strb r3,[r7,#15]
 873 004c 00BF     	 nop
 874              	.L41:
 157:../Libraries/xmc4500_lib.c ****   }
 158:../Libraries/xmc4500_lib.c **** 
 159:../Libraries/xmc4500_lib.c ****   position += (spalte-1);
 875              	 .loc 1 159 0
 876 004e BA79     	 ldrb r2,[r7,#6]
 877 0050 FB7B     	 ldrb r3,[r7,#15]
 878 0052 1344     	 add r3,r3,r2
 879 0054 DBB2     	 uxtb r3,r3
 880 0056 013B     	 subs r3,r3,#1
 881 0058 FB73     	 strb r3,[r7,#15]
 160:../Libraries/xmc4500_lib.c ****   send_byte(position | 0x80, 0);
 882              	 .loc 1 160 0
 883 005a FB7B     	 ldrb r3,[r7,#15]
 884 005c 63F07F03 	 orn r3,r3,#127
 885 0060 DBB2     	 uxtb r3,r3
 886 0062 1846     	 mov r0,r3
 887 0064 0021     	 movs r1,#0
 888 0066 FFF7FEFF 	 bl send_byte
 161:../Libraries/xmc4500_lib.c ****   wait_bsy1();
 889              	 .loc 1 161 0
 890 006a FFF7FEFF 	 bl wait_bsy1
 162:../Libraries/xmc4500_lib.c ****   wait_bsy1();
 891              	 .loc 1 162 0
 892 006e FFF7FEFF 	 bl wait_bsy1
 163:../Libraries/xmc4500_lib.c **** }
 893              	 .loc 1 163 0
 894 0072 1037     	 adds r7,r7,#16
 895              	.LCFI50:
 896              	 .cfi_def_cfa_offset 8
 897 0074 BD46     	 mov sp,r7
 898              	.LCFI51:
 899              	 .cfi_def_cfa_register 13
 900              	 
 901 0076 80BD     	 pop {r7,pc}
 902              	 .cfi_endproc
 903              	.LFE143:
 905              	 .section .text.adc_init,"ax",%progbits
 906              	 .align 2
 907              	 .global adc_init
 908              	 .thumb
 909              	 .thumb_func
 911              	adc_init:
 912              	.LFB144:
 164:../Libraries/xmc4500_lib.c **** //----------------------------------------------------------------------------
 165:../Libraries/xmc4500_lib.c **** //Initialisierung ADC:
 166:../Libraries/xmc4500_lib.c **** 
 167:../Libraries/xmc4500_lib.c **** void adc_init (void)
 168:../Libraries/xmc4500_lib.c **** {
 913              	 .loc 1 168 0
 914              	 .cfi_startproc
 915              	 
 916              	 
 917              	 
 918 0000 80B4     	 push {r7}
 919              	.LCFI52:
 920              	 .cfi_def_cfa_offset 4
 921              	 .cfi_offset 7,-4
 922 0002 00AF     	 add r7,sp,#0
 923              	.LCFI53:
 924              	 .cfi_def_cfa_register 7
 169:../Libraries/xmc4500_lib.c **** 	 SCU_RESET->PRCLR0 	|= 0x01 ;  //Reset ADC
 925              	 .loc 1 169 0
 926 0004 264A     	 ldr r2,.L43
 927 0006 264B     	 ldr r3,.L43
 928 0008 5B69     	 ldr r3,[r3,#20]
 929 000a 43F00103 	 orr r3,r3,#1
 930 000e 5361     	 str r3,[r2,#20]
 170:../Libraries/xmc4500_lib.c **** 	 VADC->CLC       		=   0;  	//enable the VADC module clock
 931              	 .loc 1 170 0
 932 0010 4FF04023 	 mov r3,#1073758208
 933 0014 0022     	 movs r2,#0
 934 0016 1A60     	 str r2,[r3]
 171:../Libraries/xmc4500_lib.c **** 	 VADC->GLOBCFG   		= 0x8000830e;   //  =>set DIVA to E , WR Enable
 935              	 .loc 1 171 0
 936 0018 4FF04023 	 mov r3,#1073758208
 937 001c 214A     	 ldr r2,.L43+4
 938 001e C3F88020 	 str r2,[r3,#128]
 172:../Libraries/xmc4500_lib.c **** 	 VADC_G0->ARBCFG 		= 0x00000003 ; // ANONS normal operation
 939              	 .loc 1 172 0
 940 0022 214B     	 ldr r3,.L43+8
 941 0024 0322     	 movs r2,#3
 942 0026 C3F88020 	 str r2,[r3,#128]
 173:../Libraries/xmc4500_lib.c **** 	 VADC_G0->ARBPR  = (1UL<< 26)|(1UL<< 8);//en arbitration slot 02,priority set to 1
 943              	 .loc 1 173 0
 944 002a 1F4B     	 ldr r3,.L43+8
 945 002c 1F4A     	 ldr r2,.L43+12
 946 002e C3F88420 	 str r2,[r3,#132]
 174:../Libraries/xmc4500_lib.c **** 	 VADC_G0->RCR[0]	|= (1UL << 24); // Wait for Read Mode
 947              	 .loc 1 174 0
 948 0032 1D4A     	 ldr r2,.L43+8
 949 0034 1C4B     	 ldr r3,.L43+8
 950 0036 D3F88032 	 ldr r3,[r3,#640]
 951 003a 43F08073 	 orr r3,r3,#16777216
 952 003e C2F88032 	 str r3,[r2,#640]
 175:../Libraries/xmc4500_lib.c **** 	 VADC_G0->RCR[0] |=  (1UL << 20); 	// DMM = 01
 953              	 .loc 1 175 0
 954 0042 194A     	 ldr r2,.L43+8
 955 0044 184B     	 ldr r3,.L43+8
 956 0046 D3F88032 	 ldr r3,[r3,#640]
 957 004a 43F48013 	 orr r3,r3,#1048576
 958 004e C2F88032 	 str r3,[r2,#640]
 176:../Libraries/xmc4500_lib.c **** 	 VADC_G0->RCR[0] |=  (0x9UL << 16); 	// FIR Filter
 959              	 .loc 1 176 0
 960 0052 154A     	 ldr r2,.L43+8
 961 0054 144B     	 ldr r3,.L43+8
 962 0056 D3F88032 	 ldr r3,[r3,#640]
 963 005a 43F41023 	 orr r3,r3,#589824
 964 005e C2F88032 	 str r3,[r2,#640]
 177:../Libraries/xmc4500_lib.c **** 	 //VADC->BRSMR    |=  (1UL <<  4);  // Autoscan
 178:../Libraries/xmc4500_lib.c **** 	 VADC_G0->ICLASS[0] |= 0x0000010f;
 965              	 .loc 1 178 0
 966 0062 114A     	 ldr r2,.L43+8
 967 0064 104B     	 ldr r3,.L43+8
 968 0066 D3F8A030 	 ldr r3,[r3,#160]
 969 006a 43F48773 	 orr r3,r3,#270
 970 006e 43F00103 	 orr r3,r3,#1
 971 0072 C2F8A030 	 str r3,[r2,#160]
 179:../Libraries/xmc4500_lib.c **** 	 VADC->GLOBICLASS[0] |=0x0000010f;
 972              	 .loc 1 179 0
 973 0076 4FF04022 	 mov r2,#1073758208
 974 007a 4FF04023 	 mov r3,#1073758208
 975 007e D3F8A030 	 ldr r3,[r3,#160]
 976 0082 43F48773 	 orr r3,r3,#270
 977 0086 43F00103 	 orr r3,r3,#1
 978 008a C2F8A030 	 str r3,[r2,#160]
 180:../Libraries/xmc4500_lib.c **** 	 // BACKGROUND SOURCE
 181:../Libraries/xmc4500_lib.c **** 	 VADC->BRSMR     = 0x01;         /* ENGT = 01B     Conv. Request m�glich     */
 979              	 .loc 1 181 0
 980 008e 4FF04023 	 mov r3,#1073758208
 981 0092 0122     	 movs r2,#1
 982 0094 C3F80422 	 str r2,[r3,#516]
 182:../Libraries/xmc4500_lib.c **** }
 983              	 .loc 1 182 0
 984 0098 BD46     	 mov sp,r7
 985              	.LCFI54:
 986              	 .cfi_def_cfa_register 13
 987              	 
 988 009a 5DF8047B 	 ldr r7,[sp],#4
 989              	.LCFI55:
 990              	 .cfi_restore 7
 991              	 .cfi_def_cfa_offset 0
 992 009e 7047     	 bx lr
 993              	.L44:
 994              	 .align 2
 995              	.L43:
 996 00a0 00440050 	 .word 1342194688
 997 00a4 0E830080 	 .word -2147450098
 998 00a8 00440040 	 .word 1073759232
 999 00ac 00010004 	 .word 67109120
 1000              	 .cfi_endproc
 1001              	.LFE144:
 1003              	 .section .text.adc_in,"ax",%progbits
 1004              	 .align 2
 1005              	 .global adc_in
 1006              	 .thumb
 1007              	 .thumb_func
 1009              	adc_in:
 1010              	.LFB145:
 183:../Libraries/xmc4500_lib.c **** //**********************************************************************************
 184:../Libraries/xmc4500_lib.c **** uint16_t adc_in (uint8_t kanal)
 185:../Libraries/xmc4500_lib.c **** {
 1011              	 .loc 1 185 0
 1012              	 .cfi_startproc
 1013              	 
 1014              	 
 1015              	 
 1016 0000 80B4     	 push {r7}
 1017              	.LCFI56:
 1018              	 .cfi_def_cfa_offset 4
 1019              	 .cfi_offset 7,-4
 1020 0002 85B0     	 sub sp,sp,#20
 1021              	.LCFI57:
 1022              	 .cfi_def_cfa_offset 24
 1023 0004 00AF     	 add r7,sp,#0
 1024              	.LCFI58:
 1025              	 .cfi_def_cfa_register 7
 1026 0006 0346     	 mov r3,r0
 1027 0008 FB71     	 strb r3,[r7,#7]
 186:../Libraries/xmc4500_lib.c **** #define anzahl 2
 187:../Libraries/xmc4500_lib.c **** uint16_t adwert;
 188:../Libraries/xmc4500_lib.c **** 		
 189:../Libraries/xmc4500_lib.c **** 		
 190:../Libraries/xmc4500_lib.c **** 	//VADC->BRSMR    |=  (1UL <<  4);  // Autoscan
 191:../Libraries/xmc4500_lib.c **** 	VADC->BRSSEL[0] =  0 |(1UL << kanal);	//Input channel
 1028              	 .loc 1 191 0
 1029 000a 4FF04022 	 mov r2,#1073758208
 1030 000e FB79     	 ldrb r3,[r7,#7]
 1031 0010 0121     	 movs r1,#1
 1032 0012 01FA03F3 	 lsl r3,r1,r3
 1033 0016 C2F88031 	 str r3,[r2,#384]
 192:../Libraries/xmc4500_lib.c **** 	VADC->BRSCTRL		= ((1UL <<23)|(1UL<<15));
 1034              	 .loc 1 192 0
 1035 001a 4FF04023 	 mov r3,#1073758208
 1036 001e 154A     	 ldr r2,.L48
 1037 0020 C3F80022 	 str r2,[r3,#512]
 193:../Libraries/xmc4500_lib.c **** 	VADC->BRSMR    |= 	0x01;	/* ENGT = 01B  Conv. Request m�glich     */
 1038              	 .loc 1 193 0
 1039 0024 4FF04022 	 mov r2,#1073758208
 1040 0028 4FF04023 	 mov r3,#1073758208
 1041 002c D3F80432 	 ldr r3,[r3,#516]
 1042 0030 43F00103 	 orr r3,r3,#1
 1043 0034 C2F80432 	 str r3,[r2,#516]
 194:../Libraries/xmc4500_lib.c **** 	VADC->BRSMR    |=  (1UL <<  9);            /* generate Load event           */
 1044              	 .loc 1 194 0
 1045 0038 4FF04022 	 mov r2,#1073758208
 1046 003c 4FF04023 	 mov r3,#1073758208
 1047 0040 D3F80432 	 ldr r3,[r3,#516]
 1048 0044 43F40073 	 orr r3,r3,#512
 1049 0048 C2F80432 	 str r3,[r2,#516]
 195:../Libraries/xmc4500_lib.c **** 	while (!(VADC_G0->RES[0] & ( 1UL << 31))){};   /* Wait for Conversion end     */
 1050              	 .loc 1 195 0
 1051 004c 00BF     	 nop
 1052              	.L46:
 1053              	 .loc 1 195 0 is_stmt 0 discriminator 1
 1054 004e 0A4B     	 ldr r3,.L48+4
 1055 0050 D3F80033 	 ldr r3,[r3,#768]
 1056 0054 002B     	 cmp r3,#0
 1057 0056 FADA     	 bge .L46
 196:../Libraries/xmc4500_lib.c ****     adwert = (VADC_G0->RES[0] & 0x0fff); /* Store converted value  ,12 Bit       */
 1058              	 .loc 1 196 0 is_stmt 1
 1059 0058 074B     	 ldr r3,.L48+4
 1060 005a D3F80033 	 ldr r3,[r3,#768]
 1061 005e 9BB2     	 uxth r3,r3
 1062 0060 C3F30B03 	 ubfx r3,r3,#0,#12
 1063 0064 FB81     	 strh r3,[r7,#14]
 197:../Libraries/xmc4500_lib.c **** 	//VADC->BRSMR   &= ~(0x00000013);	// ENGT = 0; Scan = 0;
 198:../Libraries/xmc4500_lib.c **** 		
 199:../Libraries/xmc4500_lib.c **** 	return(adwert);
 1064              	 .loc 1 199 0
 1065 0066 FB89     	 ldrh r3,[r7,#14]
 200:../Libraries/xmc4500_lib.c **** }
 1066              	 .loc 1 200 0
 1067 0068 1846     	 mov r0,r3
 1068 006a 1437     	 adds r7,r7,#20
 1069              	.LCFI59:
 1070              	 .cfi_def_cfa_offset 4
 1071 006c BD46     	 mov sp,r7
 1072              	.LCFI60:
 1073              	 .cfi_def_cfa_register 13
 1074              	 
 1075 006e 5DF8047B 	 ldr r7,[sp],#4
 1076              	.LCFI61:
 1077              	 .cfi_restore 7
 1078              	 .cfi_def_cfa_offset 0
 1079 0072 7047     	 bx lr
 1080              	.L49:
 1081              	 .align 2
 1082              	.L48:
 1083 0074 00808000 	 .word 8421376
 1084 0078 00440040 	 .word 1073759232
 1085              	 .cfi_endproc
 1086              	.LFE145:
 1088              	 .section .text.unlock_rtc,"ax",%progbits
 1089              	 .align 2
 1090              	 .global unlock_rtc
 1091              	 .thumb
 1092              	 .thumb_func
 1094              	unlock_rtc:
 1095              	.LFB146:
 201:../Libraries/xmc4500_lib.c **** //************************************************************************************
 202:../Libraries/xmc4500_lib.c **** void unlock_rtc (void)
 203:../Libraries/xmc4500_lib.c **** {
 1096              	 .loc 1 203 0
 1097              	 .cfi_startproc
 1098              	 
 1099              	 
 1100              	 
 1101 0000 80B4     	 push {r7}
 1102              	.LCFI62:
 1103              	 .cfi_def_cfa_offset 4
 1104              	 .cfi_offset 7,-4
 1105 0002 00AF     	 add r7,sp,#0
 1106              	.LCFI63:
 1107              	 .cfi_def_cfa_register 7
 204:../Libraries/xmc4500_lib.c **** 	SCU_POWER->PWRSET |= 0x01;		// Power set HIB = 1
 1108              	 .loc 1 204 0
 1109 0004 1B4A     	 ldr r2,.L54
 1110 0006 1B4B     	 ldr r3,.L54
 1111 0008 5B68     	 ldr r3,[r3,#4]
 1112 000a 43F00103 	 orr r3,r3,#1
 1113 000e 5360     	 str r3,[r2,#4]
 205:../Libraries/xmc4500_lib.c **** 	SCU_RESET->RSTCLR |= 1 <<9 ;   	// Ruecksetzen "Schlafmodus"
 1114              	 .loc 1 205 0
 1115 0010 194A     	 ldr r2,.L54+4
 1116 0012 194B     	 ldr r3,.L54+4
 1117 0014 9B68     	 ldr r3,[r3,#8]
 1118 0016 43F40073 	 orr r3,r3,#512
 1119 001a 9360     	 str r3,[r2,#8]
 206:../Libraries/xmc4500_lib.c **** 	// Zugriff auf SCU Register erst nach Abfrage Status :
 207:../Libraries/xmc4500_lib.c **** 	while ((SCU_GENERAL->MIRRSTS ) & 0x20) ;	// OSC Control Busy ?
 1120              	 .loc 1 207 0
 1121 001c 00BF     	 nop
 1122              	.L51:
 1123              	 .loc 1 207 0 is_stmt 0 discriminator 1
 1124 001e 174B     	 ldr r3,.L54+8
 1125 0020 D3F8C430 	 ldr r3,[r3,#196]
 1126 0024 03F02003 	 and r3,r3,#32
 1127 0028 002B     	 cmp r3,#0
 1128 002a F8D1     	 bne .L51
 208:../Libraries/xmc4500_lib.c **** 	SCU_HIBERNATE ->OSCSICTRL = 0x00;			// Osc einschalten
 1129              	 .loc 1 208 0 is_stmt 1
 1130 002c 144B     	 ldr r3,.L54+12
 1131 002e 0022     	 movs r2,#0
 1132 0030 5A61     	 str r2,[r3,#20]
 209:../Libraries/xmc4500_lib.c **** 	while ((SCU_GENERAL->MIRRSTS ) & 0x40) ;	// OSC Control Busy ?
 1133              	 .loc 1 209 0
 1134 0032 00BF     	 nop
 1135              	.L52:
 1136              	 .loc 1 209 0 is_stmt 0 discriminator 1
 1137 0034 114B     	 ldr r3,.L54+8
 1138 0036 D3F8C430 	 ldr r3,[r3,#196]
 1139 003a 03F04003 	 and r3,r3,#64
 1140 003e 002B     	 cmp r3,#0
 1141 0040 F8D1     	 bne .L52
 210:../Libraries/xmc4500_lib.c **** 	SCU_HIBERNATE ->OSCULCTRL |= 0x01;		// OSC in Operation
 1142              	 .loc 1 210 0 is_stmt 1
 1143 0042 0F4A     	 ldr r2,.L54+12
 1144 0044 0E4B     	 ldr r3,.L54+12
 1145 0046 DB69     	 ldr r3,[r3,#28]
 1146 0048 43F00103 	 orr r3,r3,#1
 1147 004c D361     	 str r3,[r2,#28]
 211:../Libraries/xmc4500_lib.c **** 	while ((SCU_GENERAL->MIRRSTS ) & 0x80) ;	// RTC Control Busy ?
 1148              	 .loc 1 211 0
 1149 004e 00BF     	 nop
 1150              	.L53:
 1151              	 .loc 1 211 0 is_stmt 0 discriminator 1
 1152 0050 0A4B     	 ldr r3,.L54+8
 1153 0052 D3F8C430 	 ldr r3,[r3,#196]
 1154 0056 03F08003 	 and r3,r3,#128
 1155 005a 002B     	 cmp r3,#0
 1156 005c F8D1     	 bne .L53
 212:../Libraries/xmc4500_lib.c **** 	RTC->CTR |= 0x1;	// Enable RTC
 1157              	 .loc 1 212 0 is_stmt 1
 1158 005e 094A     	 ldr r2,.L54+16
 1159 0060 084B     	 ldr r3,.L54+16
 1160 0062 5B68     	 ldr r3,[r3,#4]
 1161 0064 43F00103 	 orr r3,r3,#1
 1162 0068 5360     	 str r3,[r2,#4]
 213:../Libraries/xmc4500_lib.c **** }
 1163              	 .loc 1 213 0
 1164 006a BD46     	 mov sp,r7
 1165              	.LCFI64:
 1166              	 .cfi_def_cfa_register 13
 1167              	 
 1168 006c 5DF8047B 	 ldr r7,[sp],#4
 1169              	.LCFI65:
 1170              	 .cfi_restore 7
 1171              	 .cfi_def_cfa_offset 0
 1172 0070 7047     	 bx lr
 1173              	.L55:
 1174 0072 00BF     	 .align 2
 1175              	.L54:
 1176 0074 00420050 	 .word 1342194176
 1177 0078 00440050 	 .word 1342194688
 1178 007c 00400050 	 .word 1342193664
 1179 0080 00430050 	 .word 1342194432
 1180 0084 004A0050 	 .word 1342196224
 1181              	 .cfi_endproc
 1182              	.LFE146:
 1184              	 .section .text.ccu4x_enable,"ax",%progbits
 1185              	 .align 2
 1186              	 .global ccu4x_enable
 1187              	 .thumb
 1188              	 .thumb_func
 1190              	ccu4x_enable:
 1191              	.LFB147:
 214:../Libraries/xmc4500_lib.c **** //****************************************************************************
 215:../Libraries/xmc4500_lib.c **** void ccu4x_enable(void)
 216:../Libraries/xmc4500_lib.c **** { //System control unit
 1192              	 .loc 1 216 0
 1193              	 .cfi_startproc
 1194              	 
 1195              	 
 1196              	 
 1197 0000 80B4     	 push {r7}
 1198              	.LCFI66:
 1199              	 .cfi_def_cfa_offset 4
 1200              	 .cfi_offset 7,-4
 1201 0002 00AF     	 add r7,sp,#0
 1202              	.LCFI67:
 1203              	 .cfi_def_cfa_register 7
 217:../Libraries/xmc4500_lib.c ****   SCU_RESET->PRSET0 |= 0x1c;	// Reset CCU40,CCU41,CCU42 =>				
 1204              	 .loc 1 217 0
 1205 0004 0D4A     	 ldr r2,.L57
 1206 0006 0D4B     	 ldr r3,.L57
 1207 0008 1B69     	 ldr r3,[r3,#16]
 1208 000a 43F01C03 	 orr r3,r3,#28
 1209 000e 1361     	 str r3,[r2,#16]
 218:../Libraries/xmc4500_lib.c ****   SCU_RESET->PRCLR0 |= 0x1c; 	// re assert RESET
 1210              	 .loc 1 218 0
 1211 0010 0A4A     	 ldr r2,.L57
 1212 0012 0A4B     	 ldr r3,.L57
 1213 0014 5B69     	 ldr r3,[r3,#20]
 1214 0016 43F01C03 	 orr r3,r3,#28
 1215 001a 5361     	 str r3,[r2,#20]
 219:../Libraries/xmc4500_lib.c ****   SCU_CLK->CLKSET   |= 0x10; 	// CCU-CLK enable
 1216              	 .loc 1 219 0
 1217 001c 084A     	 ldr r2,.L57+4
 1218 001e 084B     	 ldr r3,.L57+4
 1219 0020 5B68     	 ldr r3,[r3,#4]
 1220 0022 43F01003 	 orr r3,r3,#16
 1221 0026 5360     	 str r3,[r2,#4]
 220:../Libraries/xmc4500_lib.c ****   SCU_GENERAL->CCUCON |= 0x0f;	//CCU42_CC40 global enable
 1222              	 .loc 1 220 0
 1223 0028 064A     	 ldr r2,.L57+8
 1224 002a 064B     	 ldr r3,.L57+8
 1225 002c DB6C     	 ldr r3,[r3,#76]
 1226 002e 43F00F03 	 orr r3,r3,#15
 1227 0032 D364     	 str r3,[r2,#76]
 221:../Libraries/xmc4500_lib.c **** }
 1228              	 .loc 1 221 0
 1229 0034 BD46     	 mov sp,r7
 1230              	.LCFI68:
 1231              	 .cfi_def_cfa_register 13
 1232              	 
 1233 0036 5DF8047B 	 ldr r7,[sp],#4
 1234              	.LCFI69:
 1235              	 .cfi_restore 7
 1236              	 .cfi_def_cfa_offset 0
 1237 003a 7047     	 bx lr
 1238              	.L58:
 1239              	 .align 2
 1240              	.L57:
 1241 003c 00440050 	 .word 1342194688
 1242 0040 00460050 	 .word 1342195200
 1243 0044 00400050 	 .word 1342193664
 1244              	 .cfi_endproc
 1245              	.LFE147:
 1247              	 .text
 1248              	.Letext0:
 1249              	 .file 2 "c:\\program files\\infineon\\dave-ide_4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1250              	 .file 3 "c:\\program files\\infineon\\dave-ide_4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1251              	 .file 4 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe3.3/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1252              	 .file 5 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe3.3/Libraries/CMSIS/Include/cmsis_gcc.h"
 1253              	 .file 6 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe3.3/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4500_lib.c
    {standard input}:20     .text.send_byte:00000000 $t
    {standard input}:25     .text.send_byte:00000000 send_byte
    {standard input}:146    .text.wait_0:00000000 wait_0
    {standard input}:136    .text.send_byte:00000098 $d
    {standard input}:141    .text.wait_0:00000000 $t
    {standard input}:194    .text.wait_bsy1:00000000 $t
    {standard input}:199    .text.wait_bsy1:00000000 wait_bsy1
    {standard input}:248    .text.wait_bsy2:00000000 $t
    {standard input}:253    .text.wait_bsy2:00000000 wait_bsy2
    {standard input}:302    .text.lcd_init:00000000 $t
    {standard input}:307    .text.lcd_init:00000000 lcd_init
    {standard input}:378    .text.lcd_init:00000070 $d
    {standard input}:383    .text.lcd_clear:00000000 $t
    {standard input}:388    .text.lcd_clear:00000000 lcd_clear
    {standard input}:420    .text.lcd_char:00000000 $t
    {standard input}:425    .text.lcd_char:00000000 lcd_char
    {standard input}:466    .text.lcd_print:00000000 $t
    {standard input}:471    .text.lcd_print:00000000 lcd_print
    {standard input}:813    .text.lcd_setcursor:00000000 lcd_setcursor
    {standard input}:555    .text.lcd_byte:00000000 $t
    {standard input}:560    .text.lcd_byte:00000000 lcd_byte
    {standard input}:650    .text.lcd_byte:00000084 $d
    {standard input}:656    .text.lcd_int:00000000 $t
    {standard input}:661    .text.lcd_int:00000000 lcd_int
    {standard input}:800    .text.lcd_int:000000f0 $d
    {standard input}:808    .text.lcd_setcursor:00000000 $t
    {standard input}:844    .text.lcd_setcursor:00000020 $d
    {standard input}:848    .text.lcd_setcursor:00000030 $t
    {standard input}:906    .text.adc_init:00000000 $t
    {standard input}:911    .text.adc_init:00000000 adc_init
    {standard input}:996    .text.adc_init:000000a0 $d
    {standard input}:1004   .text.adc_in:00000000 $t
    {standard input}:1009   .text.adc_in:00000000 adc_in
    {standard input}:1083   .text.adc_in:00000074 $d
    {standard input}:1089   .text.unlock_rtc:00000000 $t
    {standard input}:1094   .text.unlock_rtc:00000000 unlock_rtc
    {standard input}:1176   .text.unlock_rtc:00000074 $d
    {standard input}:1185   .text.ccu4x_enable:00000000 $t
    {standard input}:1190   .text.ccu4x_enable:00000000 ccu4x_enable
    {standard input}:1241   .text.ccu4x_enable:0000003c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
