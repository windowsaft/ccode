   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_GetInput:
  25              	.LFB138:
  26              	 .file 1 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 263:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 266:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 267:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 289:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 292:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 293:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 339 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 340:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  45              	 .loc 1 342 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e 5A6A     	 ldr r2,[r3,#36]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 22FA03F3 	 lsr r3,r2,r3
  50 0016 03F00103 	 and r3,r3,#1
 343:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 343 0
  52 001a 1846     	 mov r0,r3
  53 001c 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 001e BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 0020 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0024 7047     	 bx lr
  65              	 .cfi_endproc
  66              	.LFE138:
  68 0026 00BF     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
  69              	 .align 2
  70              	 .thumb
  71              	 .thumb_func
  73              	PIN_INTERRUPT_GetPinValue:
  74              	.LFB149:
  75              	 .file 2 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  76              	 .loc 2 362 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80 0000 80B5     	 push {r7,lr}
  81              	.LCFI6:
  82              	 .cfi_def_cfa_offset 8
  83              	 .cfi_offset 7,-8
  84              	 .cfi_offset 14,-4
  85 0002 82B0     	 sub sp,sp,#8
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
 363:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
  92              	 .loc 2 364 0
  93 0008 7B68     	 ldr r3,[r7,#4]
  94 000a 5A68     	 ldr r2,[r3,#4]
  95 000c 7B68     	 ldr r3,[r7,#4]
  96 000e 93F82130 	 ldrb r3,[r3,#33]
  97 0012 1046     	 mov r0,r2
  98 0014 1946     	 mov r1,r3
  99 0016 FFF7FEFF 	 bl XMC_GPIO_GetInput
 100 001a 0346     	 mov r3,r0
 365:C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 101              	 .loc 2 365 0
 102 001c 1846     	 mov r0,r3
 103 001e 0837     	 adds r7,r7,#8
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 8
 106 0020 BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 0022 80BD     	 pop {r7,pc}
 111              	 .cfi_endproc
 112              	.LFE149:
 114              	 .global state
 115              	 .section .bss.state,"aw",%nobits
 118              	state:
 119 0000 00       	 .space 1
 120              	 .comm ticks,4,4
 121              	 .comm abstand,2,2
 122              	 .global __aeabi_ui2d
 123              	 .global __aeabi_dmul
 124              	 .global __aeabi_ddiv
 125              	 .global __aeabi_d2uiz
 126              	 .section .text.main,"ax",%progbits
 127              	 .align 2
 128              	 .global main
 129              	 .thumb
 130              	 .thumb_func
 132              	main:
 133              	.LFB150:
 134              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Oct 25 12:38:16
   5:../main.c     ****  *  Author: Dennis
   6:../main.c     ****  */
   7:../main.c     **** /*
   8:../main.c     ****  * Aufgabe 6.1 bis 6.3
   9:../main.c     ****  * Erzeugen sie an einem Controllerausgang einen Triggerimpuls von ca. 100µs Länge.
  10:../main.c     ****  * Mit diesem Triggerimpuls wird beim Ultraschallsensor ein Messvorgang gestartet
  11:../main.c     ****  * (vgl. Timing Diagramm). Der Triggerimpuls soll periodisch alle 500ms wiederholt werden.
  12:../main.c     ****  *
  13:../main.c     ****  *   • Messen sie mit dem Oszilloskop den Triggerimpuls und den vom Sensor erzeugten Echoimpuls.
  14:../main.c     ****  *   • Simulieren sie mit einem Gegenstand verschiedene Distanzen (Auswirkung auf den Echoimpuls)
  15:../main.c     ****  *   • Überprüfen sie rechnerisch den Zusammenhang: Breite des Echoimpulses - Distanz
  16:../main.c     ****  */
  17:../main.c     **** 
  18:../main.c     **** 
  19:../main.c     **** #include "DAVE.h"                       //Declarations from DAVE Code Generation (includes SFR decl
  20:../main.c     **** #include "XMC4500.h"
  21:../main.c     **** #include "xmc4500_lib.h"
  22:../main.c     **** 
  23:../main.c     **** uint8_t state = 0;
  24:../main.c     **** uint32_t ticks;
  25:../main.c     **** uint16_t abstand;
  26:../main.c     **** 
  27:../main.c     **** void init_pwm(uint32_t vorteiler, uint32_t periode, uint32_t w);
  28:../main.c     **** void init_timer(void);
  29:../main.c     **** void ccu40_enable ( void );
  30:../main.c     **** 
  31:../main.c     **** int main(void) {
 135              	 .loc 3 31 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139 0000 80B5     	 push {r7,lr}
 140              	.LCFI11:
 141              	 .cfi_def_cfa_offset 8
 142              	 .cfi_offset 7,-8
 143              	 .cfi_offset 14,-4
 144 0002 00AF     	 add r7,sp,#0
 145              	.LCFI12:
 146              	 .cfi_def_cfa_register 7
  32:../main.c     ****   DAVE_Init();                          // Initialization of DAVE APPs  --> PIN Interrupt
 147              	 .loc 3 32 0
 148 0004 FFF7FEFF 	 bl DAVE_Init
  33:../main.c     ****   init_pwm(0b1010, 58596, 58584);       // pwm-timer Vorteiler: 0b1010 ... Periode: 58596 = 500ms/8
 149              	 .loc 3 33 0
 150 0008 0A20     	 movs r0,#10
 151 000a 4EF2E441 	 movw r1,#58596
 152 000e 4EF2D842 	 movw r2,#58584
 153 0012 FFF7FEFF 	 bl init_pwm
  34:../main.c     ****   init_timer();                         // timer
 154              	 .loc 3 34 0
 155 0016 FFF7FEFF 	 bl init_timer
  35:../main.c     **** 
  36:../main.c     ****   lcd_init();                           // LC-Display
 156              	 .loc 3 36 0
 157 001a FFF7FEFF 	 bl lcd_init
  37:../main.c     ****   lcd_clear();                          // LC-Display
 158              	 .loc 3 37 0
 159 001e FFF7FEFF 	 bl lcd_clear
 160              	.L7:
  38:../main.c     **** 
  39:../main.c     ****   while(1U) {                           
  40:../main.c     **** 	  if (state == 1) {                   // Abfrage nach der Falling Edge
 161              	 .loc 3 40 0
 162 0022 354B     	 ldr r3,.L8+16
 163 0024 1B78     	 ldrb r3,[r3]
 164 0026 012B     	 cmp r3,#1
 165 0028 5BD1     	 bne .L6
  41:../main.c     **** 		  lcd_setcursor(1,1);
 166              	 .loc 3 41 0
 167 002a 0120     	 movs r0,#1
 168 002c 0121     	 movs r1,#1
 169 002e FFF7FEFF 	 bl lcd_setcursor
  42:../main.c     **** 		  ticks = ticks * 533.33/1000.0;			                                  // Umrechnung: Ticks in Mikr
 170              	 .loc 3 42 0
 171 0032 324B     	 ldr r3,.L8+20
 172 0034 1B68     	 ldr r3,[r3]
 173 0036 1846     	 mov r0,r3
 174 0038 FFF7FEFF 	 bl __aeabi_ui2d
 175 003c 0246     	 mov r2,r0
 176 003e 0B46     	 mov r3,r1
 177 0040 1046     	 mov r0,r2
 178 0042 1946     	 mov r1,r3
 179 0044 28A3     	 adr r3,.L8
 180 0046 D3E90023 	 ldrd r2,[r3]
 181 004a FFF7FEFF 	 bl __aeabi_dmul
 182 004e 0246     	 mov r2,r0
 183 0050 0B46     	 mov r3,r1
 184 0052 1046     	 mov r0,r2
 185 0054 1946     	 mov r1,r3
 186 0056 4FF00002 	 mov r2,#0
 187 005a 294B     	 ldr r3,.L8+24
 188 005c FFF7FEFF 	 bl __aeabi_ddiv
 189 0060 0246     	 mov r2,r0
 190 0062 0B46     	 mov r3,r1
 191 0064 1046     	 mov r0,r2
 192 0066 1946     	 mov r1,r3
 193 0068 FFF7FEFF 	 bl __aeabi_d2uiz
 194 006c 0246     	 mov r2,r0
 195 006e 234B     	 ldr r3,.L8+20
 196 0070 1A60     	 str r2,[r3]
  43:../main.c     **** 		  abstand = 344 * 0.5 * ticks * (1.0/1000000.0) * 100.0;                // Umrechnung: Mikrosekun
 197              	 .loc 3 43 0
 198 0072 224B     	 ldr r3,.L8+20
 199 0074 1B68     	 ldr r3,[r3]
 200 0076 1846     	 mov r0,r3
 201 0078 FFF7FEFF 	 bl __aeabi_ui2d
 202 007c 0246     	 mov r2,r0
 203 007e 0B46     	 mov r3,r1
 204 0080 1046     	 mov r0,r2
 205 0082 1946     	 mov r1,r3
 206 0084 4FF00002 	 mov r2,#0
 207 0088 1E4B     	 ldr r3,.L8+28
 208 008a FFF7FEFF 	 bl __aeabi_dmul
 209 008e 0246     	 mov r2,r0
 210 0090 0B46     	 mov r3,r1
 211 0092 1046     	 mov r0,r2
 212 0094 1946     	 mov r1,r3
 213 0096 16A3     	 adr r3,.L8+8
 214 0098 D3E90023 	 ldrd r2,[r3]
 215 009c FFF7FEFF 	 bl __aeabi_dmul
 216 00a0 0246     	 mov r2,r0
 217 00a2 0B46     	 mov r3,r1
 218 00a4 1046     	 mov r0,r2
 219 00a6 1946     	 mov r1,r3
 220 00a8 4FF00002 	 mov r2,#0
 221 00ac 164B     	 ldr r3,.L8+32
 222 00ae FFF7FEFF 	 bl __aeabi_dmul
 223 00b2 0246     	 mov r2,r0
 224 00b4 0B46     	 mov r3,r1
 225 00b6 1046     	 mov r0,r2
 226 00b8 1946     	 mov r1,r3
 227 00ba FFF7FEFF 	 bl __aeabi_d2uiz
 228 00be 0346     	 mov r3,r0
 229 00c0 9AB2     	 uxth r2,r3
 230 00c2 124B     	 ldr r3,.L8+36
 231 00c4 1A80     	 strh r2,[r3]
  44:../main.c     **** 		  lcd_int(abstand);                                                     // Abstand aufs Display A
 232              	 .loc 3 44 0
 233 00c6 114B     	 ldr r3,.L8+36
 234 00c8 1B88     	 ldrh r3,[r3]
 235 00ca 1846     	 mov r0,r3
 236 00cc FFF7FEFF 	 bl lcd_int
  45:../main.c     **** 		  lcd_char(0x63);                                                       // Einheit augeben
 237              	 .loc 3 45 0
 238 00d0 6320     	 movs r0,#99
 239 00d2 FFF7FEFF 	 bl lcd_char
  46:../main.c     **** 		  lcd_char(0x6D);                                                       // Einheit augeben
 240              	 .loc 3 46 0
 241 00d6 6D20     	 movs r0,#109
 242 00d8 FFF7FEFF 	 bl lcd_char
  47:../main.c     **** 		  state = 0;
 243              	 .loc 3 47 0
 244 00dc 064B     	 ldr r3,.L8+16
 245 00de 0022     	 movs r2,#0
 246 00e0 1A70     	 strb r2,[r3]
 247              	.L6:
  48:../main.c     **** 	  }
  49:../main.c     ****   }
 248              	 .loc 3 49 0
 249 00e2 9EE7     	 b .L7
 250              	.L9:
 251 00e4 AFF30080 	 .align 3
 252              	.L8:
 253 00e8 713D0AD7 	 .word -687194767
 254 00ec A3AA8040 	 .word 1082174115
 255 00f0 8DEDB5A0 	 .word -1598689907
 256 00f4 F7C6B03E 	 .word 1051772663
 257 00f8 00000000 	 .word state
 258 00fc 00000000 	 .word ticks
 259 0100 00408F40 	 .word 1083129856
 260 0104 00806540 	 .word 1080393728
 261 0108 00005940 	 .word 1079574528
 262 010c 00000000 	 .word abstand
 263              	 .cfi_endproc
 264              	.LFE150:
 266              	 .section .text.ERU0_3_IRQHandler,"ax",%progbits
 267              	 .align 2
 268              	 .global ERU0_3_IRQHandler
 269              	 .thumb
 270              	 .thumb_func
 272              	ERU0_3_IRQHandler:
 273              	.LFB151:
  50:../main.c     **** }
  51:../main.c     **** 
  52:../main.c     **** void IRQHandler(void) {                                                     // Interrupt Handler --
 274              	 .loc 3 52 0
 275              	 .cfi_startproc
 276              	 
 277              	 
 278 0000 80B5     	 push {r7,lr}
 279              	.LCFI13:
 280              	 .cfi_def_cfa_offset 8
 281              	 .cfi_offset 7,-8
 282              	 .cfi_offset 14,-4
 283 0002 00AF     	 add r7,sp,#0
 284              	.LCFI14:
 285              	 .cfi_def_cfa_register 7
  53:../main.c     ****   if (PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0) > 0) {                    // case detection: risi
 286              	 .loc 3 53 0
 287 0004 0D48     	 ldr r0,.L13
 288 0006 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 289 000a 0346     	 mov r3,r0
 290 000c 002B     	 cmp r3,#0
 291 000e 06D0     	 beq .L11
  54:../main.c     **** 	  CCU40_CC40->TCSET = 0x1;                                                // Rising Edge: Timer st
 292              	 .loc 3 54 0
 293 0010 0B4B     	 ldr r3,.L13+4
 294 0012 0122     	 movs r2,#1
 295 0014 DA60     	 str r2,[r3,#12]
  55:../main.c     **** 	  state = 2;
 296              	 .loc 3 55 0
 297 0016 0B4B     	 ldr r3,.L13+8
 298 0018 0222     	 movs r2,#2
 299 001a 1A70     	 strb r2,[r3]
 300 001c 0CE0     	 b .L10
 301              	.L11:
  56:../main.c     ****   }
  57:../main.c     ****   else {                                                                    // Falling Edge
  58:../main.c     **** 	  CCU40_CC40->TCCLR = 1;                                                  // Timer Stop
 302              	 .loc 3 58 0
 303 001e 084B     	 ldr r3,.L13+4
 304 0020 0122     	 movs r2,#1
 305 0022 1A61     	 str r2,[r3,#16]
  59:../main.c     **** 	  ticks = CCU40_CC40->TIMER;                                              // Timer Wert auslesen
 306              	 .loc 3 59 0
 307 0024 064B     	 ldr r3,.L13+4
 308 0026 1B6F     	 ldr r3,[r3,#112]
 309 0028 074A     	 ldr r2,.L13+12
 310 002a 1360     	 str r3,[r2]
  60:../main.c     **** 	  CCU40_CC40->TCCLR = 0x2;                                                // Timer clear
 311              	 .loc 3 60 0
 312 002c 044B     	 ldr r3,.L13+4
 313 002e 0222     	 movs r2,#2
 314 0030 1A61     	 str r2,[r3,#16]
  61:../main.c     **** 	  state = 1;
 315              	 .loc 3 61 0
 316 0032 044B     	 ldr r3,.L13+8
 317 0034 0122     	 movs r2,#1
 318 0036 1A70     	 strb r2,[r3]
 319              	.L10:
  62:../main.c     ****   }
  63:../main.c     **** }
 320              	 .loc 3 63 0
 321 0038 80BD     	 pop {r7,pc}
 322              	.L14:
 323 003a 00BF     	 .align 2
 324              	.L13:
 325 003c 00000000 	 .word PIN_INTERRUPT_0
 326 0040 00C10040 	 .word 1073791232
 327 0044 00000000 	 .word state
 328 0048 00000000 	 .word ticks
 329              	 .cfi_endproc
 330              	.LFE151:
 332              	 .section .text.init_pwm,"ax",%progbits
 333              	 .align 2
 334              	 .global init_pwm
 335              	 .thumb
 336              	 .thumb_func
 338              	init_pwm:
 339              	.LFB152:
  64:../main.c     **** 
  65:../main.c     **** void init_pwm(uint32_t vorteiler, uint32_t periode, uint32_t w) {
 340              	 .loc 3 65 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344 0000 80B5     	 push {r7,lr}
 345              	.LCFI15:
 346              	 .cfi_def_cfa_offset 8
 347              	 .cfi_offset 7,-8
 348              	 .cfi_offset 14,-4
 349 0002 84B0     	 sub sp,sp,#16
 350              	.LCFI16:
 351              	 .cfi_def_cfa_offset 24
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI17:
 354              	 .cfi_def_cfa_register 7
 355 0006 F860     	 str r0,[r7,#12]
 356 0008 B960     	 str r1,[r7,#8]
 357 000a 7A60     	 str r2,[r7,#4]
  66:../main.c     ****   /*
  67:../main.c     ****     *   PWM init
  68:../main.c     ****     *   Muss vor init_timer() ausgeführt werden
  69:../main.c     ****     *   CCU42-Timermodul
  70:../main.c     ****     */
  71:../main.c     ****   ccu4x_enable();                   // Freigabe CCU Timermodule
 358              	 .loc 3 71 0
 359 000c FFF7FEFF 	 bl ccu4x_enable
  72:../main.c     ****   CCU42->GIDLC = 0x10F;             // Vorteiler enable, IDLE CCU40 disable
 360              	 .loc 3 72 0
 361 0010 0D4B     	 ldr r3,.L16
 362 0012 40F20F12 	 movw r2,#271
 363 0016 DA60     	 str r2,[r3,#12]
  73:../main.c     ****   CCU42_CC40->TC = 0x04;            // Shadow transfer enable on clear
 364              	 .loc 3 73 0
 365 0018 0C4B     	 ldr r3,.L16+4
 366 001a 0422     	 movs r2,#4
 367 001c 5A61     	 str r2,[r3,#20]
  74:../main.c     ****   CCU42_CC40->PSC = vorteiler;      // Vorteiler-Wert festlegen,
 368              	 .loc 3 74 0
 369 001e 0B4A     	 ldr r2,.L16+4
 370 0020 FB68     	 ldr r3,[r7,#12]
 371 0022 5362     	 str r3,[r2,#36]
  75:../main.c     ****   CCU42_CC40->PRS = periode;        // Perioden Wert festlegen
 372              	 .loc 3 75 0
 373 0024 094A     	 ldr r2,.L16+4
 374 0026 BB68     	 ldr r3,[r7,#8]
 375 0028 5363     	 str r3,[r2,#52]
  76:../main.c     **** 
  77:../main.c     ****   CCU42_CC40->CRS = w;              // Compare-Wert festlegen
 376              	 .loc 3 77 0
 377 002a 084A     	 ldr r2,.L16+4
 378 002c 7B68     	 ldr r3,[r7,#4]
 379 002e D363     	 str r3,[r2,#60]
  78:../main.c     ****   CCU42->GCSS = 1;                  // Shadow transfer request
 380              	 .loc 3 78 0
 381 0030 054B     	 ldr r3,.L16
 382 0032 0122     	 movs r2,#1
 383 0034 1A61     	 str r2,[r3,#16]
  79:../main.c     ****   PORT3->IOCR0 = 0x98;              // Output-Port PWM Signal festlegen: Alt3 =>OUT bei P3.0
 384              	 .loc 3 79 0
 385 0036 064B     	 ldr r3,.L16+8
 386 0038 9822     	 movs r2,#152
 387 003a 1A61     	 str r2,[r3,#16]
  80:../main.c     ****   CCU42_CC40->TCSET = 0x01;         // Zähler starten
 388              	 .loc 3 80 0
 389 003c 034B     	 ldr r3,.L16+4
 390 003e 0122     	 movs r2,#1
 391 0040 DA60     	 str r2,[r3,#12]
  81:../main.c     **** }
 392              	 .loc 3 81 0
 393 0042 1037     	 adds r7,r7,#16
 394              	.LCFI18:
 395              	 .cfi_def_cfa_offset 8
 396 0044 BD46     	 mov sp,r7
 397              	.LCFI19:
 398              	 .cfi_def_cfa_register 13
 399              	 
 400 0046 80BD     	 pop {r7,pc}
 401              	.L17:
 402              	 .align 2
 403              	.L16:
 404 0048 00400140 	 .word 1073823744
 405 004c 00410140 	 .word 1073824000
 406 0050 00830248 	 .word 1208124160
 407              	 .cfi_endproc
 408              	.LFE152:
 410              	 .section .text.init_timer,"ax",%progbits
 411              	 .align 2
 412              	 .global init_timer
 413              	 .thumb
 414              	 .thumb_func
 416              	init_timer:
 417              	.LFB153:
  82:../main.c     **** 
  83:../main.c     **** void init_timer(void) {
 418              	 .loc 3 83 0
 419              	 .cfi_startproc
 420              	 
 421              	 
 422              	 
 423 0000 80B4     	 push {r7}
 424              	.LCFI20:
 425              	 .cfi_def_cfa_offset 4
 426              	 .cfi_offset 7,-4
 427 0002 00AF     	 add r7,sp,#0
 428              	.LCFI21:
 429              	 .cfi_def_cfa_register 7
  84:../main.c     ****   /*
  85:../main.c     ****     *   Timer init
  86:../main.c     ****     *   CCU40-Timermodul
  87:../main.c     ****     */
  88:../main.c     ****   CCU40->GIDLC = 0x10F;             // Vorteiler enable, IDLE CCU40 disable
 430              	 .loc 3 88 0
 431 0004 0A4B     	 ldr r3,.L19
 432 0006 40F20F12 	 movw r2,#271
 433 000a DA60     	 str r2,[r3,#12]
  89:../main.c     ****   CCU40_CC40->TC = 0x04;            // Shadow transfer enable on clear
 434              	 .loc 3 89 0
 435 000c 094B     	 ldr r3,.L19+4
 436 000e 0422     	 movs r2,#4
 437 0010 5A61     	 str r2,[r3,#20]
  90:../main.c     ****   CCU40_CC40->PSC = 0b0110;         // Vorteiler festlegen
 438              	 .loc 3 90 0
 439 0012 084B     	 ldr r3,.L19+4
 440 0014 0622     	 movs r2,#6
 441 0016 5A62     	 str r2,[r3,#36]
  91:../main.c     ****   CCU40_CC40->PRS = 33752;          // Perioden Wert festlegen
 442              	 .loc 3 91 0
 443 0018 064B     	 ldr r3,.L19+4
 444 001a 48F2D832 	 movw r2,#33752
 445 001e 5A63     	 str r2,[r3,#52]
  92:../main.c     ****   CCU40->GCSS = 1;                  // Shadow transfer request
 446              	 .loc 3 92 0
 447 0020 034B     	 ldr r3,.L19
 448 0022 0122     	 movs r2,#1
 449 0024 1A61     	 str r2,[r3,#16]
  93:../main.c     **** }
 450              	 .loc 3 93 0
 451 0026 BD46     	 mov sp,r7
 452              	.LCFI22:
 453              	 .cfi_def_cfa_register 13
 454              	 
 455 0028 5DF8047B 	 ldr r7,[sp],#4
 456              	.LCFI23:
 457              	 .cfi_restore 7
 458              	 .cfi_def_cfa_offset 0
 459 002c 7047     	 bx lr
 460              	.L20:
 461 002e 00BF     	 .align 2
 462              	.L19:
 463 0030 00C00040 	 .word 1073790976
 464 0034 00C10040 	 .word 1073791232
 465              	 .cfi_endproc
 466              	.LFE153:
 468              	 .text
 469              	.Letext0:
 470              	 .file 4 "c:\\program files\\infineon\\dave-ide_4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 471              	 .file 5 "c:\\program files\\infineon\\dave-ide_4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 472              	 .file 6 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 473              	 .file 7 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc/xmc4_gpio.h"
 474              	 .file 8 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/XMCLib/inc/xmc_eru.h"
 475              	 .file 9 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/CMSIS/Include/cmsis_gcc.h"
 476              	 .file 10 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Libraries/CMSIS/Include/core_cm4.h"
 477              	 .file 11 "C:/Users/Dennis/NextCloud/desktop/Neuer Ordner/aufgabe6.1/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:24     .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:69     .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:73     .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:118    .bss.state:00000000 state
    {standard input}:119    .bss.state:00000000 $d
                            *COM*:00000004 ticks
                            *COM*:00000002 abstand
    {standard input}:127    .text.main:00000000 $t
    {standard input}:132    .text.main:00000000 main
    {standard input}:338    .text.init_pwm:00000000 init_pwm
    {standard input}:416    .text.init_timer:00000000 init_timer
    {standard input}:253    .text.main:000000e8 $d
    {standard input}:267    .text.ERU0_3_IRQHandler:00000000 $t
    {standard input}:272    .text.ERU0_3_IRQHandler:00000000 ERU0_3_IRQHandler
    {standard input}:325    .text.ERU0_3_IRQHandler:0000003c $d
    {standard input}:333    .text.init_pwm:00000000 $t
    {standard input}:404    .text.init_pwm:00000048 $d
    {standard input}:411    .text.init_timer:00000000 $t
    {standard input}:463    .text.init_timer:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2uiz
DAVE_Init
lcd_init
lcd_clear
lcd_setcursor
lcd_int
lcd_char
PIN_INTERRUPT_0
ccu4x_enable
